/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountResponse
 */
public class AccountResponseTest {
    private final AccountResponse model = new AccountResponse();

    /**
     * Model tests for AccountResponse
     */
    @Test
    public void testAccountResponse() {
        // TODO: test AccountResponse
    }

    /**
     * Test the property 'accountNumber'
     */
    @Test
    public void accountNumberTest() {
        // TODO: test accountNumber
    }

    /**
     * Test the property 'accountNumberSetBy'
     */
    @Test
    public void accountNumberSetByTest() {
        // TODO: test accountNumberSetBy
    }

    /**
     * Test the property 'accountOwnership'
     */
    @Test
    public void accountOwnershipTest() {
        // TODO: test accountOwnership
    }

    /**
     * Test the property 'annuityPolicyToDate'
     */
    @Test
    public void annuityPolicyToDateTest() {
        // TODO: test annuityPolicyToDate
    }

    /**
     * Test the property 'annuityProvider'
     */
    @Test
    public void annuityProviderTest() {
        // TODO: test annuityProvider
    }

    /**
     * Test the property 'annuityTermYear'
     */
    @Test
    public void annuityTermYearTest() {
        // TODO: test annuityTermYear
    }

    /**
     * Test the property 'apr'
     */
    @Test
    public void aprTest() {
        // TODO: test apr
    }

    /**
     * Test the property 'aprSetBy'
     */
    @Test
    public void aprSetByTest() {
        // TODO: test aprSetBy
    }

    /**
     * Test the property 'apy'
     */
    @Test
    public void apyTest() {
        // TODO: test apy
    }

    /**
     * Test the property 'apySetBy'
     */
    @Test
    public void apySetByTest() {
        // TODO: test apySetBy
    }

    /**
     * Test the property 'availableBalance'
     */
    @Test
    public void availableBalanceTest() {
        // TODO: test availableBalance
    }

    /**
     * Test the property 'availableBalanceSetBy'
     */
    @Test
    public void availableBalanceSetByTest() {
        // TODO: test availableBalanceSetBy
    }

    /**
     * Test the property 'availableCredit'
     */
    @Test
    public void availableCreditTest() {
        // TODO: test availableCredit
    }

    /**
     * Test the property 'availableCreditSetBy'
     */
    @Test
    public void availableCreditSetByTest() {
        // TODO: test availableCreditSetBy
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'balanceSetBy'
     */
    @Test
    public void balanceSetByTest() {
        // TODO: test balanceSetBy
    }

    /**
     * Test the property 'calculatedApr'
     */
    @Test
    public void calculatedAprTest() {
        // TODO: test calculatedApr
    }

    /**
     * Test the property 'cashBalance'
     */
    @Test
    public void cashBalanceTest() {
        // TODO: test cashBalance
    }

    /**
     * Test the property 'cashBalanceSetBy'
     */
    @Test
    public void cashBalanceSetByTest() {
        // TODO: test cashBalanceSetBy
    }

    /**
     * Test the property 'cashSurrenderValue'
     */
    @Test
    public void cashSurrenderValueTest() {
        // TODO: test cashSurrenderValue
    }

    /**
     * Test the property 'cashSurrenderValueSetBy'
     */
    @Test
    public void cashSurrenderValueSetByTest() {
        // TODO: test cashSurrenderValueSetBy
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'creditLimit'
     */
    @Test
    public void creditLimitTest() {
        // TODO: test creditLimit
    }

    /**
     * Test the property 'creditLimitSetBy'
     */
    @Test
    public void creditLimitSetByTest() {
        // TODO: test creditLimitSetBy
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'currencyCodeSetBy'
     */
    @Test
    public void currencyCodeSetByTest() {
        // TODO: test currencyCodeSetBy
    }

    /**
     * Test the property 'dayPaymentIsDue'
     */
    @Test
    public void dayPaymentIsDueTest() {
        // TODO: test dayPaymentIsDue
    }

    /**
     * Test the property 'dayPaymentIsDueSetBy'
     */
    @Test
    public void dayPaymentIsDueSetByTest() {
        // TODO: test dayPaymentIsDueSetBy
    }

    /**
     * Test the property 'deathBenefit'
     */
    @Test
    public void deathBenefitTest() {
        // TODO: test deathBenefit
    }

    /**
     * Test the property 'deathBenefitSetBy'
     */
    @Test
    public void deathBenefitSetByTest() {
        // TODO: test deathBenefitSetBy
    }

    /**
     * Test the property 'federalInsuranceStatus'
     */
    @Test
    public void federalInsuranceStatusTest() {
        // TODO: test federalInsuranceStatus
    }

    /**
     * Test the property 'feedAccountNumber'
     */
    @Test
    public void feedAccountNumberTest() {
        // TODO: test feedAccountNumber
    }

    /**
     * Test the property 'feedAccountSubtype'
     */
    @Test
    public void feedAccountSubtypeTest() {
        // TODO: test feedAccountSubtype
    }

    /**
     * Test the property 'feedAccountType'
     */
    @Test
    public void feedAccountTypeTest() {
        // TODO: test feedAccountType
    }

    /**
     * Test the property 'feedApr'
     */
    @Test
    public void feedAprTest() {
        // TODO: test feedApr
    }

    /**
     * Test the property 'feedApy'
     */
    @Test
    public void feedApyTest() {
        // TODO: test feedApy
    }

    /**
     * Test the property 'feedAvailableBalance'
     */
    @Test
    public void feedAvailableBalanceTest() {
        // TODO: test feedAvailableBalance
    }

    /**
     * Test the property 'feedBalance'
     */
    @Test
    public void feedBalanceTest() {
        // TODO: test feedBalance
    }

    /**
     * Test the property 'feedCashBalance'
     */
    @Test
    public void feedCashBalanceTest() {
        // TODO: test feedCashBalance
    }

    /**
     * Test the property 'feedCashSurrenderValue'
     */
    @Test
    public void feedCashSurrenderValueTest() {
        // TODO: test feedCashSurrenderValue
    }

    /**
     * Test the property 'feedCreditLimit'
     */
    @Test
    public void feedCreditLimitTest() {
        // TODO: test feedCreditLimit
    }

    /**
     * Test the property 'feedCurrencyCode'
     */
    @Test
    public void feedCurrencyCodeTest() {
        // TODO: test feedCurrencyCode
    }

    /**
     * Test the property 'feedDayPaymentIsDue'
     */
    @Test
    public void feedDayPaymentIsDueTest() {
        // TODO: test feedDayPaymentIsDue
    }

    /**
     * Test the property 'feedDeathBenefit'
     */
    @Test
    public void feedDeathBenefitTest() {
        // TODO: test feedDeathBenefit
    }

    /**
     * Test the property 'feedHoldingsValue'
     */
    @Test
    public void feedHoldingsValueTest() {
        // TODO: test feedHoldingsValue
    }

    /**
     * Test the property 'feedInterestRate'
     */
    @Test
    public void feedInterestRateTest() {
        // TODO: test feedInterestRate
    }

    /**
     * Test the property 'feedIsClosed'
     */
    @Test
    public void feedIsClosedTest() {
        // TODO: test feedIsClosed
    }

    /**
     * Test the property 'feedLastPayment'
     */
    @Test
    public void feedLastPaymentTest() {
        // TODO: test feedLastPayment
    }

    /**
     * Test the property 'feedLastPaymentAt'
     */
    @Test
    public void feedLastPaymentAtTest() {
        // TODO: test feedLastPaymentAt
    }

    /**
     * Test the property 'feedLoanAmount'
     */
    @Test
    public void feedLoanAmountTest() {
        // TODO: test feedLoanAmount
    }

    /**
     * Test the property 'feedMaturesOn'
     */
    @Test
    public void feedMaturesOnTest() {
        // TODO: test feedMaturesOn
    }

    /**
     * Test the property 'feedMinimumBalance'
     */
    @Test
    public void feedMinimumBalanceTest() {
        // TODO: test feedMinimumBalance
    }

    /**
     * Test the property 'feedMinimumPayment'
     */
    @Test
    public void feedMinimumPaymentTest() {
        // TODO: test feedMinimumPayment
    }

    /**
     * Test the property 'feedName'
     */
    @Test
    public void feedNameTest() {
        // TODO: test feedName
    }

    /**
     * Test the property 'feedNickname'
     */
    @Test
    public void feedNicknameTest() {
        // TODO: test feedNickname
    }

    /**
     * Test the property 'feedOriginalBalance'
     */
    @Test
    public void feedOriginalBalanceTest() {
        // TODO: test feedOriginalBalance
    }

    /**
     * Test the property 'feedPaymentDueAt'
     */
    @Test
    public void feedPaymentDueAtTest() {
        // TODO: test feedPaymentDueAt
    }

    /**
     * Test the property 'feedPayoffBalance'
     */
    @Test
    public void feedPayoffBalanceTest() {
        // TODO: test feedPayoffBalance
    }

    /**
     * Test the property 'feedRoutingNumber'
     */
    @Test
    public void feedRoutingNumberTest() {
        // TODO: test feedRoutingNumber
    }

    /**
     * Test the property 'feedStartedOn'
     */
    @Test
    public void feedStartedOnTest() {
        // TODO: test feedStartedOn
    }

    /**
     * Test the property 'feedStatementBalance'
     */
    @Test
    public void feedStatementBalanceTest() {
        // TODO: test feedStatementBalance
    }

    /**
     * Test the property 'feedTotalAccountValue'
     */
    @Test
    public void feedTotalAccountValueTest() {
        // TODO: test feedTotalAccountValue
    }

    /**
     * Test the property 'guid'
     */
    @Test
    public void guidTest() {
        // TODO: test guid
    }

    /**
     * Test the property 'holdingsValue'
     */
    @Test
    public void holdingsValueTest() {
        // TODO: test holdingsValue
    }

    /**
     * Test the property 'holdingsValueSetBy'
     */
    @Test
    public void holdingsValueSetByTest() {
        // TODO: test holdingsValueSetBy
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'importedAt'
     */
    @Test
    public void importedAtTest() {
        // TODO: test importedAt
    }

    /**
     * Test the property 'institutionCode'
     */
    @Test
    public void institutionCodeTest() {
        // TODO: test institutionCode
    }

    /**
     * Test the property 'institutionGuid'
     */
    @Test
    public void institutionGuidTest() {
        // TODO: test institutionGuid
    }

    /**
     * Test the property 'insuredName'
     */
    @Test
    public void insuredNameTest() {
        // TODO: test insuredName
    }

    /**
     * Test the property 'interestRate'
     */
    @Test
    public void interestRateTest() {
        // TODO: test interestRate
    }

    /**
     * Test the property 'interestRateSetBy'
     */
    @Test
    public void interestRateSetByTest() {
        // TODO: test interestRateSetBy
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'isClosedSetBy'
     */
    @Test
    public void isClosedSetByTest() {
        // TODO: test isClosedSetBy
    }

    /**
     * Test the property 'isHidden'
     */
    @Test
    public void isHiddenTest() {
        // TODO: test isHidden
    }

    /**
     * Test the property 'isManual'
     */
    @Test
    public void isManualTest() {
        // TODO: test isManual
    }

    /**
     * Test the property 'lastPayment'
     */
    @Test
    public void lastPaymentTest() {
        // TODO: test lastPayment
    }

    /**
     * Test the property 'lastPaymentSetBy'
     */
    @Test
    public void lastPaymentSetByTest() {
        // TODO: test lastPaymentSetBy
    }

    /**
     * Test the property 'lastPaymentAt'
     */
    @Test
    public void lastPaymentAtTest() {
        // TODO: test lastPaymentAt
    }

    /**
     * Test the property 'lastPaymentAtSetBy'
     */
    @Test
    public void lastPaymentAtSetByTest() {
        // TODO: test lastPaymentAtSetBy
    }

    /**
     * Test the property 'loanAmount'
     */
    @Test
    public void loanAmountTest() {
        // TODO: test loanAmount
    }

    /**
     * Test the property 'loanAmountSetBy'
     */
    @Test
    public void loanAmountSetByTest() {
        // TODO: test loanAmountSetBy
    }

    /**
     * Test the property 'marginBalance'
     */
    @Test
    public void marginBalanceTest() {
        // TODO: test marginBalance
    }

    /**
     * Test the property 'maturesOn'
     */
    @Test
    public void maturesOnTest() {
        // TODO: test maturesOn
    }

    /**
     * Test the property 'maturesOnSetBy'
     */
    @Test
    public void maturesOnSetByTest() {
        // TODO: test maturesOnSetBy
    }

    /**
     * Test the property 'memberGuid'
     */
    @Test
    public void memberGuidTest() {
        // TODO: test memberGuid
    }

    /**
     * Test the property 'memberId'
     */
    @Test
    public void memberIdTest() {
        // TODO: test memberId
    }

    /**
     * Test the property 'memberIsManagedByUser'
     */
    @Test
    public void memberIsManagedByUserTest() {
        // TODO: test memberIsManagedByUser
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'minimumBalance'
     */
    @Test
    public void minimumBalanceTest() {
        // TODO: test minimumBalance
    }

    /**
     * Test the property 'minimumBalanceSetBy'
     */
    @Test
    public void minimumBalanceSetByTest() {
        // TODO: test minimumBalanceSetBy
    }

    /**
     * Test the property 'minimumPayment'
     */
    @Test
    public void minimumPaymentTest() {
        // TODO: test minimumPayment
    }

    /**
     * Test the property 'minimumPaymentSetBy'
     */
    @Test
    public void minimumPaymentSetByTest() {
        // TODO: test minimumPaymentSetBy
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameSetBy'
     */
    @Test
    public void nameSetByTest() {
        // TODO: test nameSetBy
    }

    /**
     * Test the property 'nickname'
     */
    @Test
    public void nicknameTest() {
        // TODO: test nickname
    }

    /**
     * Test the property 'nicknameSetBy'
     */
    @Test
    public void nicknameSetByTest() {
        // TODO: test nicknameSetBy
    }

    /**
     * Test the property 'originalBalance'
     */
    @Test
    public void originalBalanceTest() {
        // TODO: test originalBalance
    }

    /**
     * Test the property 'originalBalanceSetBy'
     */
    @Test
    public void originalBalanceSetByTest() {
        // TODO: test originalBalanceSetBy
    }

    /**
     * Test the property 'payOutAmount'
     */
    @Test
    public void payOutAmountTest() {
        // TODO: test payOutAmount
    }

    /**
     * Test the property 'paymentDueAt'
     */
    @Test
    public void paymentDueAtTest() {
        // TODO: test paymentDueAt
    }

    /**
     * Test the property 'paymentDueAtSetBy'
     */
    @Test
    public void paymentDueAtSetByTest() {
        // TODO: test paymentDueAtSetBy
    }

    /**
     * Test the property 'payoffBalance'
     */
    @Test
    public void payoffBalanceTest() {
        // TODO: test payoffBalance
    }

    /**
     * Test the property 'payoffBalanceSetBy'
     */
    @Test
    public void payoffBalanceSetByTest() {
        // TODO: test payoffBalanceSetBy
    }

    /**
     * Test the property 'premiumAmount'
     */
    @Test
    public void premiumAmountTest() {
        // TODO: test premiumAmount
    }

    /**
     * Test the property 'propertyType'
     */
    @Test
    public void propertyTypeTest() {
        // TODO: test propertyType
    }

    /**
     * Test the property 'routingNumber'
     */
    @Test
    public void routingNumberTest() {
        // TODO: test routingNumber
    }

    /**
     * Test the property 'startedOn'
     */
    @Test
    public void startedOnTest() {
        // TODO: test startedOn
    }

    /**
     * Test the property 'startedOnSetBy'
     */
    @Test
    public void startedOnSetByTest() {
        // TODO: test startedOnSetBy
    }

    /**
     * Test the property 'statementBalance'
     */
    @Test
    public void statementBalanceTest() {
        // TODO: test statementBalance
    }

    /**
     * Test the property 'statementBalanceSetBy'
     */
    @Test
    public void statementBalanceSetByTest() {
        // TODO: test statementBalanceSetBy
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'subtypeSetBy'
     */
    @Test
    public void subtypeSetByTest() {
        // TODO: test subtypeSetBy
    }

    /**
     * Test the property 'todayUglAmount'
     */
    @Test
    public void todayUglAmountTest() {
        // TODO: test todayUglAmount
    }

    /**
     * Test the property 'todayUglPercentage'
     */
    @Test
    public void todayUglPercentageTest() {
        // TODO: test todayUglPercentage
    }

    /**
     * Test the property 'totalAccountValue'
     */
    @Test
    public void totalAccountValueTest() {
        // TODO: test totalAccountValue
    }

    /**
     * Test the property 'totalAccountValueSetBy'
     */
    @Test
    public void totalAccountValueSetByTest() {
        // TODO: test totalAccountValueSetBy
    }

    /**
     * Test the property 'totalAccountValueUgl'
     */
    @Test
    public void totalAccountValueUglTest() {
        // TODO: test totalAccountValueUgl
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'typeSetBy'
     */
    @Test
    public void typeSetByTest() {
        // TODO: test typeSetBy
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'userGuid'
     */
    @Test
    public void userGuidTest() {
        // TODO: test userGuid
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

}
