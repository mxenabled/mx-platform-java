/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ManagedAccountCreateRequest
 */
public class ManagedAccountCreateRequestTest {
    private final ManagedAccountCreateRequest model = new ManagedAccountCreateRequest();

    /**
     * Model tests for ManagedAccountCreateRequest
     */
    @Test
    public void testManagedAccountCreateRequest() {
        // TODO: test ManagedAccountCreateRequest
    }

    /**
     * Test the property 'accountNumber'
     */
    @Test
    public void accountNumberTest() {
        // TODO: test accountNumber
    }

    /**
     * Test the property 'apr'
     */
    @Test
    public void aprTest() {
        // TODO: test apr
    }

    /**
     * Test the property 'apy'
     */
    @Test
    public void apyTest() {
        // TODO: test apy
    }

    /**
     * Test the property 'availableBalance'
     */
    @Test
    public void availableBalanceTest() {
        // TODO: test availableBalance
    }

    /**
     * Test the property 'availableCredit'
     */
    @Test
    public void availableCreditTest() {
        // TODO: test availableCredit
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'cashSurrenderValue'
     */
    @Test
    public void cashSurrenderValueTest() {
        // TODO: test cashSurrenderValue
    }

    /**
     * Test the property 'creditLimit'
     */
    @Test
    public void creditLimitTest() {
        // TODO: test creditLimit
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'dayPaymentIsDue'
     */
    @Test
    public void dayPaymentIsDueTest() {
        // TODO: test dayPaymentIsDue
    }

    /**
     * Test the property 'deathBenefit'
     */
    @Test
    public void deathBenefitTest() {
        // TODO: test deathBenefit
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'interestRate'
     */
    @Test
    public void interestRateTest() {
        // TODO: test interestRate
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'isHidden'
     */
    @Test
    public void isHiddenTest() {
        // TODO: test isHidden
    }

    /**
     * Test the property 'lastPayment'
     */
    @Test
    public void lastPaymentTest() {
        // TODO: test lastPayment
    }

    /**
     * Test the property 'lastPaymentAt'
     */
    @Test
    public void lastPaymentAtTest() {
        // TODO: test lastPaymentAt
    }

    /**
     * Test the property 'loanAmount'
     */
    @Test
    public void loanAmountTest() {
        // TODO: test loanAmount
    }

    /**
     * Test the property 'maturesOn'
     */
    @Test
    public void maturesOnTest() {
        // TODO: test maturesOn
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'minimumBalance'
     */
    @Test
    public void minimumBalanceTest() {
        // TODO: test minimumBalance
    }

    /**
     * Test the property 'minimumPayment'
     */
    @Test
    public void minimumPaymentTest() {
        // TODO: test minimumPayment
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nickname'
     */
    @Test
    public void nicknameTest() {
        // TODO: test nickname
    }

    /**
     * Test the property 'originalBalance'
     */
    @Test
    public void originalBalanceTest() {
        // TODO: test originalBalance
    }

    /**
     * Test the property 'paymentDueAt'
     */
    @Test
    public void paymentDueAtTest() {
        // TODO: test paymentDueAt
    }

    /**
     * Test the property 'payoffBalance'
     */
    @Test
    public void payoffBalanceTest() {
        // TODO: test payoffBalance
    }

    /**
     * Test the property 'routingNumber'
     */
    @Test
    public void routingNumberTest() {
        // TODO: test routingNumber
    }

    /**
     * Test the property 'startedOn'
     */
    @Test
    public void startedOnTest() {
        // TODO: test startedOn
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
