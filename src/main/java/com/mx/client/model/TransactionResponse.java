/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * TransactionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransactionResponse {
  public static final String SERIALIZED_NAME_ACCOUNT_GUID = "account_guid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_GUID)
  private String accountGuid;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_CATEGORY_GUID = "category_guid";
  @SerializedName(SERIALIZED_NAME_CATEGORY_GUID)
  private String categoryGuid;

  public static final String SERIALIZED_NAME_CHECK_NUMBER_STRING = "check_number_string";
  @SerializedName(SERIALIZED_NAME_CHECK_NUMBER_STRING)
  private String checkNumberString;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXTENDED_TRANSACTION_TYPE = "extended_transaction_type";
  @SerializedName(SERIALIZED_NAME_EXTENDED_TRANSACTION_TYPE)
  private String extendedTransactionType;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_BILL_PAY = "is_bill_pay";
  @SerializedName(SERIALIZED_NAME_IS_BILL_PAY)
  private Boolean isBillPay;

  public static final String SERIALIZED_NAME_IS_DIRECT_DEPOSIT = "is_direct_deposit";
  @SerializedName(SERIALIZED_NAME_IS_DIRECT_DEPOSIT)
  private Boolean isDirectDeposit;

  public static final String SERIALIZED_NAME_IS_EXPENSE = "is_expense";
  @SerializedName(SERIALIZED_NAME_IS_EXPENSE)
  private Boolean isExpense;

  public static final String SERIALIZED_NAME_IS_FEE = "is_fee";
  @SerializedName(SERIALIZED_NAME_IS_FEE)
  private Boolean isFee;

  public static final String SERIALIZED_NAME_IS_INCOME = "is_income";
  @SerializedName(SERIALIZED_NAME_IS_INCOME)
  private Boolean isIncome;

  public static final String SERIALIZED_NAME_IS_INTERNATIONAL = "is_international";
  @SerializedName(SERIALIZED_NAME_IS_INTERNATIONAL)
  private Boolean isInternational;

  public static final String SERIALIZED_NAME_IS_OVERDRAFT_FEE = "is_overdraft_fee";
  @SerializedName(SERIALIZED_NAME_IS_OVERDRAFT_FEE)
  private Boolean isOverdraftFee;

  public static final String SERIALIZED_NAME_IS_PAYROLL_ADVANCE = "is_payroll_advance";
  @SerializedName(SERIALIZED_NAME_IS_PAYROLL_ADVANCE)
  private Boolean isPayrollAdvance;

  public static final String SERIALIZED_NAME_IS_RECURRING = "is_recurring";
  @SerializedName(SERIALIZED_NAME_IS_RECURRING)
  private Boolean isRecurring;

  public static final String SERIALIZED_NAME_IS_SUBSCRIPTION = "is_subscription";
  @SerializedName(SERIALIZED_NAME_IS_SUBSCRIPTION)
  private Boolean isSubscription;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private BigDecimal latitude;

  public static final String SERIALIZED_NAME_LOCALIZED_DESCRIPTION = "localized_description";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_DESCRIPTION)
  private String localizedDescription;

  public static final String SERIALIZED_NAME_LOCALIZED_MEMO = "localized_memo";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_MEMO)
  private String localizedMemo;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private BigDecimal longitude;

  public static final String SERIALIZED_NAME_MEMBER_GUID = "member_guid";
  @SerializedName(SERIALIZED_NAME_MEMBER_GUID)
  private String memberGuid;

  public static final String SERIALIZED_NAME_MEMBER_IS_MANAGED_BY_USER = "member_is_managed_by_user";
  @SerializedName(SERIALIZED_NAME_MEMBER_IS_MANAGED_BY_USER)
  private Boolean memberIsManagedByUser;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_MERCHANT_CATEGORY_CODE = "merchant_category_code";
  @SerializedName(SERIALIZED_NAME_MERCHANT_CATEGORY_CODE)
  private Integer merchantCategoryCode;

  public static final String SERIALIZED_NAME_MERCHANT_GUID = "merchant_guid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_GUID)
  private String merchantGuid;

  public static final String SERIALIZED_NAME_MERCHANT_LOCATION_GUID = "merchant_location_guid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_LOCATION_GUID)
  private String merchantLocationGuid;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_ORIGINAL_DESCRIPTION = "original_description";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_DESCRIPTION)
  private String originalDescription;

  public static final String SERIALIZED_NAME_POSTED_AT = "posted_at";
  @SerializedName(SERIALIZED_NAME_POSTED_AT)
  private String postedAt;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TOP_LEVEL_CATEGORY = "top_level_category";
  @SerializedName(SERIALIZED_NAME_TOP_LEVEL_CATEGORY)
  private String topLevelCategory;

  public static final String SERIALIZED_NAME_TRANSACTED_AT = "transacted_at";
  @SerializedName(SERIALIZED_NAME_TRANSACTED_AT)
  private String transactedAt;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public TransactionResponse() {
  }

  public TransactionResponse accountGuid(String accountGuid) {
    
    this.accountGuid = accountGuid;
    return this;
  }

   /**
   * Get accountGuid
   * @return accountGuid
  **/
  @javax.annotation.Nullable
  public String getAccountGuid() {
    return accountGuid;
  }


  public void setAccountGuid(String accountGuid) {
    this.accountGuid = accountGuid;
  }


  public TransactionResponse accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public TransactionResponse amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public TransactionResponse category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public TransactionResponse categoryGuid(String categoryGuid) {
    
    this.categoryGuid = categoryGuid;
    return this;
  }

   /**
   * Get categoryGuid
   * @return categoryGuid
  **/
  @javax.annotation.Nullable
  public String getCategoryGuid() {
    return categoryGuid;
  }


  public void setCategoryGuid(String categoryGuid) {
    this.categoryGuid = categoryGuid;
  }


  public TransactionResponse checkNumberString(String checkNumberString) {
    
    this.checkNumberString = checkNumberString;
    return this;
  }

   /**
   * Get checkNumberString
   * @return checkNumberString
  **/
  @javax.annotation.Nullable
  public String getCheckNumberString() {
    return checkNumberString;
  }


  public void setCheckNumberString(String checkNumberString) {
    this.checkNumberString = checkNumberString;
  }


  public TransactionResponse createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public TransactionResponse currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public TransactionResponse date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }


  public void setDate(String date) {
    this.date = date;
  }


  public TransactionResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public TransactionResponse extendedTransactionType(String extendedTransactionType) {
    
    this.extendedTransactionType = extendedTransactionType;
    return this;
  }

   /**
   * Get extendedTransactionType
   * @return extendedTransactionType
  **/
  @javax.annotation.Nullable
  public String getExtendedTransactionType() {
    return extendedTransactionType;
  }


  public void setExtendedTransactionType(String extendedTransactionType) {
    this.extendedTransactionType = extendedTransactionType;
  }


  public TransactionResponse guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public TransactionResponse id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public TransactionResponse isBillPay(Boolean isBillPay) {
    
    this.isBillPay = isBillPay;
    return this;
  }

   /**
   * Get isBillPay
   * @return isBillPay
  **/
  @javax.annotation.Nullable
  public Boolean getIsBillPay() {
    return isBillPay;
  }


  public void setIsBillPay(Boolean isBillPay) {
    this.isBillPay = isBillPay;
  }


  public TransactionResponse isDirectDeposit(Boolean isDirectDeposit) {
    
    this.isDirectDeposit = isDirectDeposit;
    return this;
  }

   /**
   * Get isDirectDeposit
   * @return isDirectDeposit
  **/
  @javax.annotation.Nullable
  public Boolean getIsDirectDeposit() {
    return isDirectDeposit;
  }


  public void setIsDirectDeposit(Boolean isDirectDeposit) {
    this.isDirectDeposit = isDirectDeposit;
  }


  public TransactionResponse isExpense(Boolean isExpense) {
    
    this.isExpense = isExpense;
    return this;
  }

   /**
   * Get isExpense
   * @return isExpense
  **/
  @javax.annotation.Nullable
  public Boolean getIsExpense() {
    return isExpense;
  }


  public void setIsExpense(Boolean isExpense) {
    this.isExpense = isExpense;
  }


  public TransactionResponse isFee(Boolean isFee) {
    
    this.isFee = isFee;
    return this;
  }

   /**
   * Get isFee
   * @return isFee
  **/
  @javax.annotation.Nullable
  public Boolean getIsFee() {
    return isFee;
  }


  public void setIsFee(Boolean isFee) {
    this.isFee = isFee;
  }


  public TransactionResponse isIncome(Boolean isIncome) {
    
    this.isIncome = isIncome;
    return this;
  }

   /**
   * Get isIncome
   * @return isIncome
  **/
  @javax.annotation.Nullable
  public Boolean getIsIncome() {
    return isIncome;
  }


  public void setIsIncome(Boolean isIncome) {
    this.isIncome = isIncome;
  }


  public TransactionResponse isInternational(Boolean isInternational) {
    
    this.isInternational = isInternational;
    return this;
  }

   /**
   * Get isInternational
   * @return isInternational
  **/
  @javax.annotation.Nullable
  public Boolean getIsInternational() {
    return isInternational;
  }


  public void setIsInternational(Boolean isInternational) {
    this.isInternational = isInternational;
  }


  public TransactionResponse isOverdraftFee(Boolean isOverdraftFee) {
    
    this.isOverdraftFee = isOverdraftFee;
    return this;
  }

   /**
   * Get isOverdraftFee
   * @return isOverdraftFee
  **/
  @javax.annotation.Nullable
  public Boolean getIsOverdraftFee() {
    return isOverdraftFee;
  }


  public void setIsOverdraftFee(Boolean isOverdraftFee) {
    this.isOverdraftFee = isOverdraftFee;
  }


  public TransactionResponse isPayrollAdvance(Boolean isPayrollAdvance) {
    
    this.isPayrollAdvance = isPayrollAdvance;
    return this;
  }

   /**
   * Get isPayrollAdvance
   * @return isPayrollAdvance
  **/
  @javax.annotation.Nullable
  public Boolean getIsPayrollAdvance() {
    return isPayrollAdvance;
  }


  public void setIsPayrollAdvance(Boolean isPayrollAdvance) {
    this.isPayrollAdvance = isPayrollAdvance;
  }


  public TransactionResponse isRecurring(Boolean isRecurring) {
    
    this.isRecurring = isRecurring;
    return this;
  }

   /**
   * Get isRecurring
   * @return isRecurring
  **/
  @javax.annotation.Nullable
  public Boolean getIsRecurring() {
    return isRecurring;
  }


  public void setIsRecurring(Boolean isRecurring) {
    this.isRecurring = isRecurring;
  }


  public TransactionResponse isSubscription(Boolean isSubscription) {
    
    this.isSubscription = isSubscription;
    return this;
  }

   /**
   * Get isSubscription
   * @return isSubscription
  **/
  @javax.annotation.Nullable
  public Boolean getIsSubscription() {
    return isSubscription;
  }


  public void setIsSubscription(Boolean isSubscription) {
    this.isSubscription = isSubscription;
  }


  public TransactionResponse latitude(BigDecimal latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @javax.annotation.Nullable
  public BigDecimal getLatitude() {
    return latitude;
  }


  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }


  public TransactionResponse localizedDescription(String localizedDescription) {
    
    this.localizedDescription = localizedDescription;
    return this;
  }

   /**
   * Get localizedDescription
   * @return localizedDescription
  **/
  @javax.annotation.Nullable
  public String getLocalizedDescription() {
    return localizedDescription;
  }


  public void setLocalizedDescription(String localizedDescription) {
    this.localizedDescription = localizedDescription;
  }


  public TransactionResponse localizedMemo(String localizedMemo) {
    
    this.localizedMemo = localizedMemo;
    return this;
  }

   /**
   * Get localizedMemo
   * @return localizedMemo
  **/
  @javax.annotation.Nullable
  public String getLocalizedMemo() {
    return localizedMemo;
  }


  public void setLocalizedMemo(String localizedMemo) {
    this.localizedMemo = localizedMemo;
  }


  public TransactionResponse longitude(BigDecimal longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nullable
  public BigDecimal getLongitude() {
    return longitude;
  }


  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }


  public TransactionResponse memberGuid(String memberGuid) {
    
    this.memberGuid = memberGuid;
    return this;
  }

   /**
   * Get memberGuid
   * @return memberGuid
  **/
  @javax.annotation.Nullable
  public String getMemberGuid() {
    return memberGuid;
  }


  public void setMemberGuid(String memberGuid) {
    this.memberGuid = memberGuid;
  }


  public TransactionResponse memberIsManagedByUser(Boolean memberIsManagedByUser) {
    
    this.memberIsManagedByUser = memberIsManagedByUser;
    return this;
  }

   /**
   * Get memberIsManagedByUser
   * @return memberIsManagedByUser
  **/
  @javax.annotation.Nullable
  public Boolean getMemberIsManagedByUser() {
    return memberIsManagedByUser;
  }


  public void setMemberIsManagedByUser(Boolean memberIsManagedByUser) {
    this.memberIsManagedByUser = memberIsManagedByUser;
  }


  public TransactionResponse memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @javax.annotation.Nullable
  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  public TransactionResponse merchantCategoryCode(Integer merchantCategoryCode) {
    
    this.merchantCategoryCode = merchantCategoryCode;
    return this;
  }

   /**
   * Get merchantCategoryCode
   * @return merchantCategoryCode
  **/
  @javax.annotation.Nullable
  public Integer getMerchantCategoryCode() {
    return merchantCategoryCode;
  }


  public void setMerchantCategoryCode(Integer merchantCategoryCode) {
    this.merchantCategoryCode = merchantCategoryCode;
  }


  public TransactionResponse merchantGuid(String merchantGuid) {
    
    this.merchantGuid = merchantGuid;
    return this;
  }

   /**
   * Get merchantGuid
   * @return merchantGuid
  **/
  @javax.annotation.Nullable
  public String getMerchantGuid() {
    return merchantGuid;
  }


  public void setMerchantGuid(String merchantGuid) {
    this.merchantGuid = merchantGuid;
  }


  public TransactionResponse merchantLocationGuid(String merchantLocationGuid) {
    
    this.merchantLocationGuid = merchantLocationGuid;
    return this;
  }

   /**
   * Get merchantLocationGuid
   * @return merchantLocationGuid
  **/
  @javax.annotation.Nullable
  public String getMerchantLocationGuid() {
    return merchantLocationGuid;
  }


  public void setMerchantLocationGuid(String merchantLocationGuid) {
    this.merchantLocationGuid = merchantLocationGuid;
  }


  public TransactionResponse metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public TransactionResponse originalDescription(String originalDescription) {
    
    this.originalDescription = originalDescription;
    return this;
  }

   /**
   * Get originalDescription
   * @return originalDescription
  **/
  @javax.annotation.Nullable
  public String getOriginalDescription() {
    return originalDescription;
  }


  public void setOriginalDescription(String originalDescription) {
    this.originalDescription = originalDescription;
  }


  public TransactionResponse postedAt(String postedAt) {
    
    this.postedAt = postedAt;
    return this;
  }

   /**
   * Get postedAt
   * @return postedAt
  **/
  @javax.annotation.Nullable
  public String getPostedAt() {
    return postedAt;
  }


  public void setPostedAt(String postedAt) {
    this.postedAt = postedAt;
  }


  public TransactionResponse status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public TransactionResponse topLevelCategory(String topLevelCategory) {
    
    this.topLevelCategory = topLevelCategory;
    return this;
  }

   /**
   * Get topLevelCategory
   * @return topLevelCategory
  **/
  @javax.annotation.Nullable
  public String getTopLevelCategory() {
    return topLevelCategory;
  }


  public void setTopLevelCategory(String topLevelCategory) {
    this.topLevelCategory = topLevelCategory;
  }


  public TransactionResponse transactedAt(String transactedAt) {
    
    this.transactedAt = transactedAt;
    return this;
  }

   /**
   * Get transactedAt
   * @return transactedAt
  **/
  @javax.annotation.Nullable
  public String getTransactedAt() {
    return transactedAt;
  }


  public void setTransactedAt(String transactedAt) {
    this.transactedAt = transactedAt;
  }


  public TransactionResponse type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public TransactionResponse updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public TransactionResponse userGuid(String userGuid) {
    
    this.userGuid = userGuid;
    return this;
  }

   /**
   * Get userGuid
   * @return userGuid
  **/
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }


  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }


  public TransactionResponse userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionResponse transactionResponse = (TransactionResponse) o;
    return Objects.equals(this.accountGuid, transactionResponse.accountGuid) &&
        Objects.equals(this.accountId, transactionResponse.accountId) &&
        Objects.equals(this.amount, transactionResponse.amount) &&
        Objects.equals(this.category, transactionResponse.category) &&
        Objects.equals(this.categoryGuid, transactionResponse.categoryGuid) &&
        Objects.equals(this.checkNumberString, transactionResponse.checkNumberString) &&
        Objects.equals(this.createdAt, transactionResponse.createdAt) &&
        Objects.equals(this.currencyCode, transactionResponse.currencyCode) &&
        Objects.equals(this.date, transactionResponse.date) &&
        Objects.equals(this.description, transactionResponse.description) &&
        Objects.equals(this.extendedTransactionType, transactionResponse.extendedTransactionType) &&
        Objects.equals(this.guid, transactionResponse.guid) &&
        Objects.equals(this.id, transactionResponse.id) &&
        Objects.equals(this.isBillPay, transactionResponse.isBillPay) &&
        Objects.equals(this.isDirectDeposit, transactionResponse.isDirectDeposit) &&
        Objects.equals(this.isExpense, transactionResponse.isExpense) &&
        Objects.equals(this.isFee, transactionResponse.isFee) &&
        Objects.equals(this.isIncome, transactionResponse.isIncome) &&
        Objects.equals(this.isInternational, transactionResponse.isInternational) &&
        Objects.equals(this.isOverdraftFee, transactionResponse.isOverdraftFee) &&
        Objects.equals(this.isPayrollAdvance, transactionResponse.isPayrollAdvance) &&
        Objects.equals(this.isRecurring, transactionResponse.isRecurring) &&
        Objects.equals(this.isSubscription, transactionResponse.isSubscription) &&
        Objects.equals(this.latitude, transactionResponse.latitude) &&
        Objects.equals(this.localizedDescription, transactionResponse.localizedDescription) &&
        Objects.equals(this.localizedMemo, transactionResponse.localizedMemo) &&
        Objects.equals(this.longitude, transactionResponse.longitude) &&
        Objects.equals(this.memberGuid, transactionResponse.memberGuid) &&
        Objects.equals(this.memberIsManagedByUser, transactionResponse.memberIsManagedByUser) &&
        Objects.equals(this.memo, transactionResponse.memo) &&
        Objects.equals(this.merchantCategoryCode, transactionResponse.merchantCategoryCode) &&
        Objects.equals(this.merchantGuid, transactionResponse.merchantGuid) &&
        Objects.equals(this.merchantLocationGuid, transactionResponse.merchantLocationGuid) &&
        Objects.equals(this.metadata, transactionResponse.metadata) &&
        Objects.equals(this.originalDescription, transactionResponse.originalDescription) &&
        Objects.equals(this.postedAt, transactionResponse.postedAt) &&
        Objects.equals(this.status, transactionResponse.status) &&
        Objects.equals(this.topLevelCategory, transactionResponse.topLevelCategory) &&
        Objects.equals(this.transactedAt, transactionResponse.transactedAt) &&
        Objects.equals(this.type, transactionResponse.type) &&
        Objects.equals(this.updatedAt, transactionResponse.updatedAt) &&
        Objects.equals(this.userGuid, transactionResponse.userGuid) &&
        Objects.equals(this.userId, transactionResponse.userId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountGuid, accountId, amount, category, categoryGuid, checkNumberString, createdAt, currencyCode, date, description, extendedTransactionType, guid, id, isBillPay, isDirectDeposit, isExpense, isFee, isIncome, isInternational, isOverdraftFee, isPayrollAdvance, isRecurring, isSubscription, latitude, localizedDescription, localizedMemo, longitude, memberGuid, memberIsManagedByUser, memo, merchantCategoryCode, merchantGuid, merchantLocationGuid, metadata, originalDescription, postedAt, status, topLevelCategory, transactedAt, type, updatedAt, userGuid, userId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionResponse {\n");
    sb.append("    accountGuid: ").append(toIndentedString(accountGuid)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryGuid: ").append(toIndentedString(categoryGuid)).append("\n");
    sb.append("    checkNumberString: ").append(toIndentedString(checkNumberString)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extendedTransactionType: ").append(toIndentedString(extendedTransactionType)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBillPay: ").append(toIndentedString(isBillPay)).append("\n");
    sb.append("    isDirectDeposit: ").append(toIndentedString(isDirectDeposit)).append("\n");
    sb.append("    isExpense: ").append(toIndentedString(isExpense)).append("\n");
    sb.append("    isFee: ").append(toIndentedString(isFee)).append("\n");
    sb.append("    isIncome: ").append(toIndentedString(isIncome)).append("\n");
    sb.append("    isInternational: ").append(toIndentedString(isInternational)).append("\n");
    sb.append("    isOverdraftFee: ").append(toIndentedString(isOverdraftFee)).append("\n");
    sb.append("    isPayrollAdvance: ").append(toIndentedString(isPayrollAdvance)).append("\n");
    sb.append("    isRecurring: ").append(toIndentedString(isRecurring)).append("\n");
    sb.append("    isSubscription: ").append(toIndentedString(isSubscription)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    localizedDescription: ").append(toIndentedString(localizedDescription)).append("\n");
    sb.append("    localizedMemo: ").append(toIndentedString(localizedMemo)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    memberGuid: ").append(toIndentedString(memberGuid)).append("\n");
    sb.append("    memberIsManagedByUser: ").append(toIndentedString(memberIsManagedByUser)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    merchantCategoryCode: ").append(toIndentedString(merchantCategoryCode)).append("\n");
    sb.append("    merchantGuid: ").append(toIndentedString(merchantGuid)).append("\n");
    sb.append("    merchantLocationGuid: ").append(toIndentedString(merchantLocationGuid)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    originalDescription: ").append(toIndentedString(originalDescription)).append("\n");
    sb.append("    postedAt: ").append(toIndentedString(postedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    topLevelCategory: ").append(toIndentedString(topLevelCategory)).append("\n");
    sb.append("    transactedAt: ").append(toIndentedString(transactedAt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_guid");
    openapiFields.add("account_id");
    openapiFields.add("amount");
    openapiFields.add("category");
    openapiFields.add("category_guid");
    openapiFields.add("check_number_string");
    openapiFields.add("created_at");
    openapiFields.add("currency_code");
    openapiFields.add("date");
    openapiFields.add("description");
    openapiFields.add("extended_transaction_type");
    openapiFields.add("guid");
    openapiFields.add("id");
    openapiFields.add("is_bill_pay");
    openapiFields.add("is_direct_deposit");
    openapiFields.add("is_expense");
    openapiFields.add("is_fee");
    openapiFields.add("is_income");
    openapiFields.add("is_international");
    openapiFields.add("is_overdraft_fee");
    openapiFields.add("is_payroll_advance");
    openapiFields.add("is_recurring");
    openapiFields.add("is_subscription");
    openapiFields.add("latitude");
    openapiFields.add("localized_description");
    openapiFields.add("localized_memo");
    openapiFields.add("longitude");
    openapiFields.add("member_guid");
    openapiFields.add("member_is_managed_by_user");
    openapiFields.add("memo");
    openapiFields.add("merchant_category_code");
    openapiFields.add("merchant_guid");
    openapiFields.add("merchant_location_guid");
    openapiFields.add("metadata");
    openapiFields.add("original_description");
    openapiFields.add("posted_at");
    openapiFields.add("status");
    openapiFields.add("top_level_category");
    openapiFields.add("transacted_at");
    openapiFields.add("type");
    openapiFields.add("updated_at");
    openapiFields.add("user_guid");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TransactionResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TransactionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransactionResponse is not found in the empty JSON string", TransactionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TransactionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransactionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_guid") != null && !jsonObj.get("account_guid").isJsonNull()) && !jsonObj.get("account_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_guid").toString()));
      }
      if ((jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonNull()) && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("category_guid") != null && !jsonObj.get("category_guid").isJsonNull()) && !jsonObj.get("category_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_guid").toString()));
      }
      if ((jsonObj.get("check_number_string") != null && !jsonObj.get("check_number_string").isJsonNull()) && !jsonObj.get("check_number_string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `check_number_string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("check_number_string").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("extended_transaction_type") != null && !jsonObj.get("extended_transaction_type").isJsonNull()) && !jsonObj.get("extended_transaction_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extended_transaction_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extended_transaction_type").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("localized_description") != null && !jsonObj.get("localized_description").isJsonNull()) && !jsonObj.get("localized_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localized_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localized_description").toString()));
      }
      if ((jsonObj.get("localized_memo") != null && !jsonObj.get("localized_memo").isJsonNull()) && !jsonObj.get("localized_memo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localized_memo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localized_memo").toString()));
      }
      if ((jsonObj.get("member_guid") != null && !jsonObj.get("member_guid").isJsonNull()) && !jsonObj.get("member_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `member_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("member_guid").toString()));
      }
      if ((jsonObj.get("memo") != null && !jsonObj.get("memo").isJsonNull()) && !jsonObj.get("memo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo").toString()));
      }
      if ((jsonObj.get("merchant_guid") != null && !jsonObj.get("merchant_guid").isJsonNull()) && !jsonObj.get("merchant_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_guid").toString()));
      }
      if ((jsonObj.get("merchant_location_guid") != null && !jsonObj.get("merchant_location_guid").isJsonNull()) && !jsonObj.get("merchant_location_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_location_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_location_guid").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("original_description") != null && !jsonObj.get("original_description").isJsonNull()) && !jsonObj.get("original_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `original_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("original_description").toString()));
      }
      if ((jsonObj.get("posted_at") != null && !jsonObj.get("posted_at").isJsonNull()) && !jsonObj.get("posted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `posted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("posted_at").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("top_level_category") != null && !jsonObj.get("top_level_category").isJsonNull()) && !jsonObj.get("top_level_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_level_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("top_level_category").toString()));
      }
      if ((jsonObj.get("transacted_at") != null && !jsonObj.get("transacted_at").isJsonNull()) && !jsonObj.get("transacted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transacted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transacted_at").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
      if ((jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransactionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransactionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransactionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransactionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TransactionResponse>() {
           @Override
           public void write(JsonWriter out, TransactionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransactionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransactionResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransactionResponse
  * @throws IOException if the JSON string is invalid with respect to TransactionResponse
  */
  public static TransactionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransactionResponse.class);
  }

 /**
  * Convert an instance of TransactionResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

