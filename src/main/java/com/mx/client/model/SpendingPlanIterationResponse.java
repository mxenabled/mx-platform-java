/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * SpendingPlanIterationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpendingPlanIterationResponse {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_END_ON = "end_on";
  @SerializedName(SERIALIZED_NAME_END_ON)
  private String endOn;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_ITERATION_NUMBER = "iteration_number";
  @SerializedName(SERIALIZED_NAME_ITERATION_NUMBER)
  private Integer iterationNumber;

  public static final String SERIALIZED_NAME_SPENDING_PLAN_GUID = "spending_plan_guid";
  @SerializedName(SERIALIZED_NAME_SPENDING_PLAN_GUID)
  private String spendingPlanGuid;

  public static final String SERIALIZED_NAME_START_ON = "start_on";
  @SerializedName(SERIALIZED_NAME_START_ON)
  private String startOn;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public SpendingPlanIterationResponse() {
  }

  public SpendingPlanIterationResponse createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SpendingPlanIterationResponse endOn(String endOn) {
    
    this.endOn = endOn;
    return this;
  }

   /**
   * Get endOn
   * @return endOn
  **/
  @javax.annotation.Nullable
  public String getEndOn() {
    return endOn;
  }


  public void setEndOn(String endOn) {
    this.endOn = endOn;
  }


  public SpendingPlanIterationResponse guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public SpendingPlanIterationResponse iterationNumber(Integer iterationNumber) {
    
    this.iterationNumber = iterationNumber;
    return this;
  }

   /**
   * Get iterationNumber
   * @return iterationNumber
  **/
  @javax.annotation.Nullable
  public Integer getIterationNumber() {
    return iterationNumber;
  }


  public void setIterationNumber(Integer iterationNumber) {
    this.iterationNumber = iterationNumber;
  }


  public SpendingPlanIterationResponse spendingPlanGuid(String spendingPlanGuid) {
    
    this.spendingPlanGuid = spendingPlanGuid;
    return this;
  }

   /**
   * Get spendingPlanGuid
   * @return spendingPlanGuid
  **/
  @javax.annotation.Nullable
  public String getSpendingPlanGuid() {
    return spendingPlanGuid;
  }


  public void setSpendingPlanGuid(String spendingPlanGuid) {
    this.spendingPlanGuid = spendingPlanGuid;
  }


  public SpendingPlanIterationResponse startOn(String startOn) {
    
    this.startOn = startOn;
    return this;
  }

   /**
   * Get startOn
   * @return startOn
  **/
  @javax.annotation.Nullable
  public String getStartOn() {
    return startOn;
  }


  public void setStartOn(String startOn) {
    this.startOn = startOn;
  }


  public SpendingPlanIterationResponse updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SpendingPlanIterationResponse userGuid(String userGuid) {
    
    this.userGuid = userGuid;
    return this;
  }

   /**
   * Get userGuid
   * @return userGuid
  **/
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }


  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpendingPlanIterationResponse spendingPlanIterationResponse = (SpendingPlanIterationResponse) o;
    return Objects.equals(this.createdAt, spendingPlanIterationResponse.createdAt) &&
        Objects.equals(this.endOn, spendingPlanIterationResponse.endOn) &&
        Objects.equals(this.guid, spendingPlanIterationResponse.guid) &&
        Objects.equals(this.iterationNumber, spendingPlanIterationResponse.iterationNumber) &&
        Objects.equals(this.spendingPlanGuid, spendingPlanIterationResponse.spendingPlanGuid) &&
        Objects.equals(this.startOn, spendingPlanIterationResponse.startOn) &&
        Objects.equals(this.updatedAt, spendingPlanIterationResponse.updatedAt) &&
        Objects.equals(this.userGuid, spendingPlanIterationResponse.userGuid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, endOn, guid, iterationNumber, spendingPlanGuid, startOn, updatedAt, userGuid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpendingPlanIterationResponse {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    endOn: ").append(toIndentedString(endOn)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    iterationNumber: ").append(toIndentedString(iterationNumber)).append("\n");
    sb.append("    spendingPlanGuid: ").append(toIndentedString(spendingPlanGuid)).append("\n");
    sb.append("    startOn: ").append(toIndentedString(startOn)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("end_on");
    openapiFields.add("guid");
    openapiFields.add("iteration_number");
    openapiFields.add("spending_plan_guid");
    openapiFields.add("start_on");
    openapiFields.add("updated_at");
    openapiFields.add("user_guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SpendingPlanIterationResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SpendingPlanIterationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpendingPlanIterationResponse is not found in the empty JSON string", SpendingPlanIterationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SpendingPlanIterationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SpendingPlanIterationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("end_on") != null && !jsonObj.get("end_on").isJsonNull()) && !jsonObj.get("end_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_on").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("spending_plan_guid") != null && !jsonObj.get("spending_plan_guid").isJsonNull()) && !jsonObj.get("spending_plan_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spending_plan_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spending_plan_guid").toString()));
      }
      if ((jsonObj.get("start_on") != null && !jsonObj.get("start_on").isJsonNull()) && !jsonObj.get("start_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_on").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpendingPlanIterationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpendingPlanIterationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpendingPlanIterationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpendingPlanIterationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SpendingPlanIterationResponse>() {
           @Override
           public void write(JsonWriter out, SpendingPlanIterationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SpendingPlanIterationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SpendingPlanIterationResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SpendingPlanIterationResponse
  * @throws IOException if the JSON string is invalid with respect to SpendingPlanIterationResponse
  */
  public static SpendingPlanIterationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpendingPlanIterationResponse.class);
  }

 /**
  * Convert an instance of SpendingPlanIterationResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

