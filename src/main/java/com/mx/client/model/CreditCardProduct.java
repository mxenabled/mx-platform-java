/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * CreditCardProduct
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreditCardProduct {
  public static final String SERIALIZED_NAME_ANNUAL_FEE = "annual_fee";
  @SerializedName(SERIALIZED_NAME_ANNUAL_FEE)
  private Object annualFee = null;

  public static final String SERIALIZED_NAME_DURATION_OF_INTRODUCTORY_RATE_ON_BALANCE_TRANSFER = "duration_of_introductory_rate_on_balance_transfer";
  @SerializedName(SERIALIZED_NAME_DURATION_OF_INTRODUCTORY_RATE_ON_BALANCE_TRANSFER)
  private Object durationOfIntroductoryRateOnBalanceTransfer = null;

  public static final String SERIALIZED_NAME_DURATION_OF_INTRODUCTORY_RATE_ON_PURCHASES = "duration_of_introductory_rate_on_purchases";
  @SerializedName(SERIALIZED_NAME_DURATION_OF_INTRODUCTORY_RATE_ON_PURCHASES)
  private Object durationOfIntroductoryRateOnPurchases = null;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private Object guid = null;

  public static final String SERIALIZED_NAME_HAS_CASHBACK_REWARDS = "has_cashback_rewards";
  @SerializedName(SERIALIZED_NAME_HAS_CASHBACK_REWARDS)
  private Boolean hasCashbackRewards;

  public static final String SERIALIZED_NAME_HAS_OTHER_REWARDS = "has_other_rewards";
  @SerializedName(SERIALIZED_NAME_HAS_OTHER_REWARDS)
  private Boolean hasOtherRewards;

  public static final String SERIALIZED_NAME_HAS_TRAVEL_REWARDS = "has_travel_rewards";
  @SerializedName(SERIALIZED_NAME_HAS_TRAVEL_REWARDS)
  private Boolean hasTravelRewards;

  public static final String SERIALIZED_NAME_HAS_ZERO_INTRODUCTORY_ANNUAL_FEE = "has_zero_introductory_annual_fee";
  @SerializedName(SERIALIZED_NAME_HAS_ZERO_INTRODUCTORY_ANNUAL_FEE)
  private Boolean hasZeroIntroductoryAnnualFee;

  public static final String SERIALIZED_NAME_HAS_ZERO_PERCENT_INTRODUCTORY_RATE = "has_zero_percent_introductory_rate";
  @SerializedName(SERIALIZED_NAME_HAS_ZERO_PERCENT_INTRODUCTORY_RATE)
  private Boolean hasZeroPercentIntroductoryRate;

  public static final String SERIALIZED_NAME_HAS_ZERO_PERCENT_INTRODUCTORY_RATE_ON_BALANCE_TRANSFER = "has_zero_percent_introductory_rate_on_balance_transfer";
  @SerializedName(SERIALIZED_NAME_HAS_ZERO_PERCENT_INTRODUCTORY_RATE_ON_BALANCE_TRANSFER)
  private Boolean hasZeroPercentIntroductoryRateOnBalanceTransfer;

  public static final String SERIALIZED_NAME_FINANCIAL_INSTITUTION = "financial_institution";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_INSTITUTION)
  private Boolean financialInstitution;

  public static final String SERIALIZED_NAME_IS_ACCEPTING_APPLICATIONS = "is_accepting_applications";
  @SerializedName(SERIALIZED_NAME_IS_ACCEPTING_APPLICATIONS)
  private Boolean isAcceptingApplications;

  public static final String SERIALIZED_NAME_IS_SMALL_BUSINESS_CARD = "is_small_business_card";
  @SerializedName(SERIALIZED_NAME_IS_SMALL_BUSINESS_CARD)
  private Boolean isSmallBusinessCard;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public CreditCardProduct() {
  }

  public CreditCardProduct annualFee(Object annualFee) {
    
    this.annualFee = annualFee;
    return this;
  }

   /**
   * Get annualFee
   * @return annualFee
  **/
  @javax.annotation.Nullable
  public Object getAnnualFee() {
    return annualFee;
  }


  public void setAnnualFee(Object annualFee) {
    this.annualFee = annualFee;
  }


  public CreditCardProduct durationOfIntroductoryRateOnBalanceTransfer(Object durationOfIntroductoryRateOnBalanceTransfer) {
    
    this.durationOfIntroductoryRateOnBalanceTransfer = durationOfIntroductoryRateOnBalanceTransfer;
    return this;
  }

   /**
   * Get durationOfIntroductoryRateOnBalanceTransfer
   * @return durationOfIntroductoryRateOnBalanceTransfer
  **/
  @javax.annotation.Nullable
  public Object getDurationOfIntroductoryRateOnBalanceTransfer() {
    return durationOfIntroductoryRateOnBalanceTransfer;
  }


  public void setDurationOfIntroductoryRateOnBalanceTransfer(Object durationOfIntroductoryRateOnBalanceTransfer) {
    this.durationOfIntroductoryRateOnBalanceTransfer = durationOfIntroductoryRateOnBalanceTransfer;
  }


  public CreditCardProduct durationOfIntroductoryRateOnPurchases(Object durationOfIntroductoryRateOnPurchases) {
    
    this.durationOfIntroductoryRateOnPurchases = durationOfIntroductoryRateOnPurchases;
    return this;
  }

   /**
   * Get durationOfIntroductoryRateOnPurchases
   * @return durationOfIntroductoryRateOnPurchases
  **/
  @javax.annotation.Nullable
  public Object getDurationOfIntroductoryRateOnPurchases() {
    return durationOfIntroductoryRateOnPurchases;
  }


  public void setDurationOfIntroductoryRateOnPurchases(Object durationOfIntroductoryRateOnPurchases) {
    this.durationOfIntroductoryRateOnPurchases = durationOfIntroductoryRateOnPurchases;
  }


  public CreditCardProduct guid(Object guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  public Object getGuid() {
    return guid;
  }


  public void setGuid(Object guid) {
    this.guid = guid;
  }


  public CreditCardProduct hasCashbackRewards(Boolean hasCashbackRewards) {
    
    this.hasCashbackRewards = hasCashbackRewards;
    return this;
  }

   /**
   * Get hasCashbackRewards
   * @return hasCashbackRewards
  **/
  @javax.annotation.Nullable
  public Boolean getHasCashbackRewards() {
    return hasCashbackRewards;
  }


  public void setHasCashbackRewards(Boolean hasCashbackRewards) {
    this.hasCashbackRewards = hasCashbackRewards;
  }


  public CreditCardProduct hasOtherRewards(Boolean hasOtherRewards) {
    
    this.hasOtherRewards = hasOtherRewards;
    return this;
  }

   /**
   * Get hasOtherRewards
   * @return hasOtherRewards
  **/
  @javax.annotation.Nullable
  public Boolean getHasOtherRewards() {
    return hasOtherRewards;
  }


  public void setHasOtherRewards(Boolean hasOtherRewards) {
    this.hasOtherRewards = hasOtherRewards;
  }


  public CreditCardProduct hasTravelRewards(Boolean hasTravelRewards) {
    
    this.hasTravelRewards = hasTravelRewards;
    return this;
  }

   /**
   * Get hasTravelRewards
   * @return hasTravelRewards
  **/
  @javax.annotation.Nullable
  public Boolean getHasTravelRewards() {
    return hasTravelRewards;
  }


  public void setHasTravelRewards(Boolean hasTravelRewards) {
    this.hasTravelRewards = hasTravelRewards;
  }


  public CreditCardProduct hasZeroIntroductoryAnnualFee(Boolean hasZeroIntroductoryAnnualFee) {
    
    this.hasZeroIntroductoryAnnualFee = hasZeroIntroductoryAnnualFee;
    return this;
  }

   /**
   * Get hasZeroIntroductoryAnnualFee
   * @return hasZeroIntroductoryAnnualFee
  **/
  @javax.annotation.Nullable
  public Boolean getHasZeroIntroductoryAnnualFee() {
    return hasZeroIntroductoryAnnualFee;
  }


  public void setHasZeroIntroductoryAnnualFee(Boolean hasZeroIntroductoryAnnualFee) {
    this.hasZeroIntroductoryAnnualFee = hasZeroIntroductoryAnnualFee;
  }


  public CreditCardProduct hasZeroPercentIntroductoryRate(Boolean hasZeroPercentIntroductoryRate) {
    
    this.hasZeroPercentIntroductoryRate = hasZeroPercentIntroductoryRate;
    return this;
  }

   /**
   * Get hasZeroPercentIntroductoryRate
   * @return hasZeroPercentIntroductoryRate
  **/
  @javax.annotation.Nullable
  public Boolean getHasZeroPercentIntroductoryRate() {
    return hasZeroPercentIntroductoryRate;
  }


  public void setHasZeroPercentIntroductoryRate(Boolean hasZeroPercentIntroductoryRate) {
    this.hasZeroPercentIntroductoryRate = hasZeroPercentIntroductoryRate;
  }


  public CreditCardProduct hasZeroPercentIntroductoryRateOnBalanceTransfer(Boolean hasZeroPercentIntroductoryRateOnBalanceTransfer) {
    
    this.hasZeroPercentIntroductoryRateOnBalanceTransfer = hasZeroPercentIntroductoryRateOnBalanceTransfer;
    return this;
  }

   /**
   * Get hasZeroPercentIntroductoryRateOnBalanceTransfer
   * @return hasZeroPercentIntroductoryRateOnBalanceTransfer
  **/
  @javax.annotation.Nullable
  public Boolean getHasZeroPercentIntroductoryRateOnBalanceTransfer() {
    return hasZeroPercentIntroductoryRateOnBalanceTransfer;
  }


  public void setHasZeroPercentIntroductoryRateOnBalanceTransfer(Boolean hasZeroPercentIntroductoryRateOnBalanceTransfer) {
    this.hasZeroPercentIntroductoryRateOnBalanceTransfer = hasZeroPercentIntroductoryRateOnBalanceTransfer;
  }


  public CreditCardProduct financialInstitution(Boolean financialInstitution) {
    
    this.financialInstitution = financialInstitution;
    return this;
  }

   /**
   * Get financialInstitution
   * @return financialInstitution
  **/
  @javax.annotation.Nullable
  public Boolean getFinancialInstitution() {
    return financialInstitution;
  }


  public void setFinancialInstitution(Boolean financialInstitution) {
    this.financialInstitution = financialInstitution;
  }


  public CreditCardProduct isAcceptingApplications(Boolean isAcceptingApplications) {
    
    this.isAcceptingApplications = isAcceptingApplications;
    return this;
  }

   /**
   * Get isAcceptingApplications
   * @return isAcceptingApplications
  **/
  @javax.annotation.Nullable
  public Boolean getIsAcceptingApplications() {
    return isAcceptingApplications;
  }


  public void setIsAcceptingApplications(Boolean isAcceptingApplications) {
    this.isAcceptingApplications = isAcceptingApplications;
  }


  public CreditCardProduct isSmallBusinessCard(Boolean isSmallBusinessCard) {
    
    this.isSmallBusinessCard = isSmallBusinessCard;
    return this;
  }

   /**
   * Get isSmallBusinessCard
   * @return isSmallBusinessCard
  **/
  @javax.annotation.Nullable
  public Boolean getIsSmallBusinessCard() {
    return isSmallBusinessCard;
  }


  public void setIsSmallBusinessCard(Boolean isSmallBusinessCard) {
    this.isSmallBusinessCard = isSmallBusinessCard;
  }


  public CreditCardProduct name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditCardProduct creditCardProduct = (CreditCardProduct) o;
    return Objects.equals(this.annualFee, creditCardProduct.annualFee) &&
        Objects.equals(this.durationOfIntroductoryRateOnBalanceTransfer, creditCardProduct.durationOfIntroductoryRateOnBalanceTransfer) &&
        Objects.equals(this.durationOfIntroductoryRateOnPurchases, creditCardProduct.durationOfIntroductoryRateOnPurchases) &&
        Objects.equals(this.guid, creditCardProduct.guid) &&
        Objects.equals(this.hasCashbackRewards, creditCardProduct.hasCashbackRewards) &&
        Objects.equals(this.hasOtherRewards, creditCardProduct.hasOtherRewards) &&
        Objects.equals(this.hasTravelRewards, creditCardProduct.hasTravelRewards) &&
        Objects.equals(this.hasZeroIntroductoryAnnualFee, creditCardProduct.hasZeroIntroductoryAnnualFee) &&
        Objects.equals(this.hasZeroPercentIntroductoryRate, creditCardProduct.hasZeroPercentIntroductoryRate) &&
        Objects.equals(this.hasZeroPercentIntroductoryRateOnBalanceTransfer, creditCardProduct.hasZeroPercentIntroductoryRateOnBalanceTransfer) &&
        Objects.equals(this.financialInstitution, creditCardProduct.financialInstitution) &&
        Objects.equals(this.isAcceptingApplications, creditCardProduct.isAcceptingApplications) &&
        Objects.equals(this.isSmallBusinessCard, creditCardProduct.isSmallBusinessCard) &&
        Objects.equals(this.name, creditCardProduct.name);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(annualFee, durationOfIntroductoryRateOnBalanceTransfer, durationOfIntroductoryRateOnPurchases, guid, hasCashbackRewards, hasOtherRewards, hasTravelRewards, hasZeroIntroductoryAnnualFee, hasZeroPercentIntroductoryRate, hasZeroPercentIntroductoryRateOnBalanceTransfer, financialInstitution, isAcceptingApplications, isSmallBusinessCard, name);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditCardProduct {\n");
    sb.append("    annualFee: ").append(toIndentedString(annualFee)).append("\n");
    sb.append("    durationOfIntroductoryRateOnBalanceTransfer: ").append(toIndentedString(durationOfIntroductoryRateOnBalanceTransfer)).append("\n");
    sb.append("    durationOfIntroductoryRateOnPurchases: ").append(toIndentedString(durationOfIntroductoryRateOnPurchases)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasCashbackRewards: ").append(toIndentedString(hasCashbackRewards)).append("\n");
    sb.append("    hasOtherRewards: ").append(toIndentedString(hasOtherRewards)).append("\n");
    sb.append("    hasTravelRewards: ").append(toIndentedString(hasTravelRewards)).append("\n");
    sb.append("    hasZeroIntroductoryAnnualFee: ").append(toIndentedString(hasZeroIntroductoryAnnualFee)).append("\n");
    sb.append("    hasZeroPercentIntroductoryRate: ").append(toIndentedString(hasZeroPercentIntroductoryRate)).append("\n");
    sb.append("    hasZeroPercentIntroductoryRateOnBalanceTransfer: ").append(toIndentedString(hasZeroPercentIntroductoryRateOnBalanceTransfer)).append("\n");
    sb.append("    financialInstitution: ").append(toIndentedString(financialInstitution)).append("\n");
    sb.append("    isAcceptingApplications: ").append(toIndentedString(isAcceptingApplications)).append("\n");
    sb.append("    isSmallBusinessCard: ").append(toIndentedString(isSmallBusinessCard)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annual_fee");
    openapiFields.add("duration_of_introductory_rate_on_balance_transfer");
    openapiFields.add("duration_of_introductory_rate_on_purchases");
    openapiFields.add("guid");
    openapiFields.add("has_cashback_rewards");
    openapiFields.add("has_other_rewards");
    openapiFields.add("has_travel_rewards");
    openapiFields.add("has_zero_introductory_annual_fee");
    openapiFields.add("has_zero_percent_introductory_rate");
    openapiFields.add("has_zero_percent_introductory_rate_on_balance_transfer");
    openapiFields.add("financial_institution");
    openapiFields.add("is_accepting_applications");
    openapiFields.add("is_small_business_card");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CreditCardProduct
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreditCardProduct.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreditCardProduct is not found in the empty JSON string", CreditCardProduct.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreditCardProduct.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreditCardProduct` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreditCardProduct.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreditCardProduct' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreditCardProduct> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreditCardProduct.class));

       return (TypeAdapter<T>) new TypeAdapter<CreditCardProduct>() {
           @Override
           public void write(JsonWriter out, CreditCardProduct value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreditCardProduct read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreditCardProduct given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreditCardProduct
  * @throws IOException if the JSON string is invalid with respect to CreditCardProduct
  */
  public static CreditCardProduct fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreditCardProduct.class);
  }

 /**
  * Convert an instance of CreditCardProduct to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

