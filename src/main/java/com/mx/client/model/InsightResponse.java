/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * InsightResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InsightResponse {
  public static final String SERIALIZED_NAME_ACTIVE_AT = "active_at";
  @SerializedName(SERIALIZED_NAME_ACTIVE_AT)
  private String activeAt;

  public static final String SERIALIZED_NAME_CLIENT_GUID = "client_guid";
  @SerializedName(SERIALIZED_NAME_CLIENT_GUID)
  private String clientGuid;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CTA_CLICKED_AT = "cta_clicked_at";
  @SerializedName(SERIALIZED_NAME_CTA_CLICKED_AT)
  private String ctaClickedAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_HAS_ASSOCIATED_ACCOUNTS = "has_associated_accounts";
  @SerializedName(SERIALIZED_NAME_HAS_ASSOCIATED_ACCOUNTS)
  private Boolean hasAssociatedAccounts;

  public static final String SERIALIZED_NAME_HAS_ASSOCIATED_MERCHANTS = "has_associated_merchants";
  @SerializedName(SERIALIZED_NAME_HAS_ASSOCIATED_MERCHANTS)
  private Boolean hasAssociatedMerchants;

  public static final String SERIALIZED_NAME_HAS_ASSOCIATED_SCHEDULED_PAYMENTS = "has_associated_scheduled_payments";
  @SerializedName(SERIALIZED_NAME_HAS_ASSOCIATED_SCHEDULED_PAYMENTS)
  private Boolean hasAssociatedScheduledPayments;

  public static final String SERIALIZED_NAME_HAS_ASSOCIATED_TRANSACTIONS = "has_associated_transactions";
  @SerializedName(SERIALIZED_NAME_HAS_ASSOCIATED_TRANSACTIONS)
  private Boolean hasAssociatedTransactions;

  public static final String SERIALIZED_NAME_HAS_BEEN_DISPLAYED = "has_been_displayed";
  @SerializedName(SERIALIZED_NAME_HAS_BEEN_DISPLAYED)
  private Boolean hasBeenDisplayed;

  public static final String SERIALIZED_NAME_IS_DISMISSED = "is_dismissed";
  @SerializedName(SERIALIZED_NAME_IS_DISMISSED)
  private Boolean isDismissed;

  public static final String SERIALIZED_NAME_MICRO_CALL_TO_ACTION = "micro_call_to_action";
  @SerializedName(SERIALIZED_NAME_MICRO_CALL_TO_ACTION)
  private String microCallToAction;

  public static final String SERIALIZED_NAME_MICRO_DESCRIPTION = "micro_description";
  @SerializedName(SERIALIZED_NAME_MICRO_DESCRIPTION)
  private String microDescription;

  public static final String SERIALIZED_NAME_MICRO_TITLE = "micro_title";
  @SerializedName(SERIALIZED_NAME_MICRO_TITLE)
  private String microTitle;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private String template;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Object userId = null;

  public InsightResponse() {
  }

  public InsightResponse activeAt(String activeAt) {
    
    this.activeAt = activeAt;
    return this;
  }

   /**
   * Get activeAt
   * @return activeAt
  **/
  @javax.annotation.Nullable
  public String getActiveAt() {
    return activeAt;
  }


  public void setActiveAt(String activeAt) {
    this.activeAt = activeAt;
  }


  public InsightResponse clientGuid(String clientGuid) {
    
    this.clientGuid = clientGuid;
    return this;
  }

   /**
   * Get clientGuid
   * @return clientGuid
  **/
  @javax.annotation.Nullable
  public String getClientGuid() {
    return clientGuid;
  }


  public void setClientGuid(String clientGuid) {
    this.clientGuid = clientGuid;
  }


  public InsightResponse createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public InsightResponse ctaClickedAt(String ctaClickedAt) {
    
    this.ctaClickedAt = ctaClickedAt;
    return this;
  }

   /**
   * Get ctaClickedAt
   * @return ctaClickedAt
  **/
  @javax.annotation.Nullable
  public String getCtaClickedAt() {
    return ctaClickedAt;
  }


  public void setCtaClickedAt(String ctaClickedAt) {
    this.ctaClickedAt = ctaClickedAt;
  }


  public InsightResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public InsightResponse guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public InsightResponse hasAssociatedAccounts(Boolean hasAssociatedAccounts) {
    
    this.hasAssociatedAccounts = hasAssociatedAccounts;
    return this;
  }

   /**
   * Get hasAssociatedAccounts
   * @return hasAssociatedAccounts
  **/
  @javax.annotation.Nullable
  public Boolean getHasAssociatedAccounts() {
    return hasAssociatedAccounts;
  }


  public void setHasAssociatedAccounts(Boolean hasAssociatedAccounts) {
    this.hasAssociatedAccounts = hasAssociatedAccounts;
  }


  public InsightResponse hasAssociatedMerchants(Boolean hasAssociatedMerchants) {
    
    this.hasAssociatedMerchants = hasAssociatedMerchants;
    return this;
  }

   /**
   * Get hasAssociatedMerchants
   * @return hasAssociatedMerchants
  **/
  @javax.annotation.Nullable
  public Boolean getHasAssociatedMerchants() {
    return hasAssociatedMerchants;
  }


  public void setHasAssociatedMerchants(Boolean hasAssociatedMerchants) {
    this.hasAssociatedMerchants = hasAssociatedMerchants;
  }


  public InsightResponse hasAssociatedScheduledPayments(Boolean hasAssociatedScheduledPayments) {
    
    this.hasAssociatedScheduledPayments = hasAssociatedScheduledPayments;
    return this;
  }

   /**
   * Get hasAssociatedScheduledPayments
   * @return hasAssociatedScheduledPayments
  **/
  @javax.annotation.Nullable
  public Boolean getHasAssociatedScheduledPayments() {
    return hasAssociatedScheduledPayments;
  }


  public void setHasAssociatedScheduledPayments(Boolean hasAssociatedScheduledPayments) {
    this.hasAssociatedScheduledPayments = hasAssociatedScheduledPayments;
  }


  public InsightResponse hasAssociatedTransactions(Boolean hasAssociatedTransactions) {
    
    this.hasAssociatedTransactions = hasAssociatedTransactions;
    return this;
  }

   /**
   * Get hasAssociatedTransactions
   * @return hasAssociatedTransactions
  **/
  @javax.annotation.Nullable
  public Boolean getHasAssociatedTransactions() {
    return hasAssociatedTransactions;
  }


  public void setHasAssociatedTransactions(Boolean hasAssociatedTransactions) {
    this.hasAssociatedTransactions = hasAssociatedTransactions;
  }


  public InsightResponse hasBeenDisplayed(Boolean hasBeenDisplayed) {
    
    this.hasBeenDisplayed = hasBeenDisplayed;
    return this;
  }

   /**
   * Get hasBeenDisplayed
   * @return hasBeenDisplayed
  **/
  @javax.annotation.Nullable
  public Boolean getHasBeenDisplayed() {
    return hasBeenDisplayed;
  }


  public void setHasBeenDisplayed(Boolean hasBeenDisplayed) {
    this.hasBeenDisplayed = hasBeenDisplayed;
  }


  public InsightResponse isDismissed(Boolean isDismissed) {
    
    this.isDismissed = isDismissed;
    return this;
  }

   /**
   * Get isDismissed
   * @return isDismissed
  **/
  @javax.annotation.Nullable
  public Boolean getIsDismissed() {
    return isDismissed;
  }


  public void setIsDismissed(Boolean isDismissed) {
    this.isDismissed = isDismissed;
  }


  public InsightResponse microCallToAction(String microCallToAction) {
    
    this.microCallToAction = microCallToAction;
    return this;
  }

   /**
   * Get microCallToAction
   * @return microCallToAction
  **/
  @javax.annotation.Nullable
  public String getMicroCallToAction() {
    return microCallToAction;
  }


  public void setMicroCallToAction(String microCallToAction) {
    this.microCallToAction = microCallToAction;
  }


  public InsightResponse microDescription(String microDescription) {
    
    this.microDescription = microDescription;
    return this;
  }

   /**
   * Get microDescription
   * @return microDescription
  **/
  @javax.annotation.Nullable
  public String getMicroDescription() {
    return microDescription;
  }


  public void setMicroDescription(String microDescription) {
    this.microDescription = microDescription;
  }


  public InsightResponse microTitle(String microTitle) {
    
    this.microTitle = microTitle;
    return this;
  }

   /**
   * Get microTitle
   * @return microTitle
  **/
  @javax.annotation.Nullable
  public String getMicroTitle() {
    return microTitle;
  }


  public void setMicroTitle(String microTitle) {
    this.microTitle = microTitle;
  }


  public InsightResponse template(String template) {
    
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  public String getTemplate() {
    return template;
  }


  public void setTemplate(String template) {
    this.template = template;
  }


  public InsightResponse title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public InsightResponse updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public InsightResponse userGuid(String userGuid) {
    
    this.userGuid = userGuid;
    return this;
  }

   /**
   * Get userGuid
   * @return userGuid
  **/
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }


  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }


  public InsightResponse userId(Object userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  public Object getUserId() {
    return userId;
  }


  public void setUserId(Object userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsightResponse insightResponse = (InsightResponse) o;
    return Objects.equals(this.activeAt, insightResponse.activeAt) &&
        Objects.equals(this.clientGuid, insightResponse.clientGuid) &&
        Objects.equals(this.createdAt, insightResponse.createdAt) &&
        Objects.equals(this.ctaClickedAt, insightResponse.ctaClickedAt) &&
        Objects.equals(this.description, insightResponse.description) &&
        Objects.equals(this.guid, insightResponse.guid) &&
        Objects.equals(this.hasAssociatedAccounts, insightResponse.hasAssociatedAccounts) &&
        Objects.equals(this.hasAssociatedMerchants, insightResponse.hasAssociatedMerchants) &&
        Objects.equals(this.hasAssociatedScheduledPayments, insightResponse.hasAssociatedScheduledPayments) &&
        Objects.equals(this.hasAssociatedTransactions, insightResponse.hasAssociatedTransactions) &&
        Objects.equals(this.hasBeenDisplayed, insightResponse.hasBeenDisplayed) &&
        Objects.equals(this.isDismissed, insightResponse.isDismissed) &&
        Objects.equals(this.microCallToAction, insightResponse.microCallToAction) &&
        Objects.equals(this.microDescription, insightResponse.microDescription) &&
        Objects.equals(this.microTitle, insightResponse.microTitle) &&
        Objects.equals(this.template, insightResponse.template) &&
        Objects.equals(this.title, insightResponse.title) &&
        Objects.equals(this.updatedAt, insightResponse.updatedAt) &&
        Objects.equals(this.userGuid, insightResponse.userGuid) &&
        Objects.equals(this.userId, insightResponse.userId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeAt, clientGuid, createdAt, ctaClickedAt, description, guid, hasAssociatedAccounts, hasAssociatedMerchants, hasAssociatedScheduledPayments, hasAssociatedTransactions, hasBeenDisplayed, isDismissed, microCallToAction, microDescription, microTitle, template, title, updatedAt, userGuid, userId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsightResponse {\n");
    sb.append("    activeAt: ").append(toIndentedString(activeAt)).append("\n");
    sb.append("    clientGuid: ").append(toIndentedString(clientGuid)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    ctaClickedAt: ").append(toIndentedString(ctaClickedAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    hasAssociatedAccounts: ").append(toIndentedString(hasAssociatedAccounts)).append("\n");
    sb.append("    hasAssociatedMerchants: ").append(toIndentedString(hasAssociatedMerchants)).append("\n");
    sb.append("    hasAssociatedScheduledPayments: ").append(toIndentedString(hasAssociatedScheduledPayments)).append("\n");
    sb.append("    hasAssociatedTransactions: ").append(toIndentedString(hasAssociatedTransactions)).append("\n");
    sb.append("    hasBeenDisplayed: ").append(toIndentedString(hasBeenDisplayed)).append("\n");
    sb.append("    isDismissed: ").append(toIndentedString(isDismissed)).append("\n");
    sb.append("    microCallToAction: ").append(toIndentedString(microCallToAction)).append("\n");
    sb.append("    microDescription: ").append(toIndentedString(microDescription)).append("\n");
    sb.append("    microTitle: ").append(toIndentedString(microTitle)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active_at");
    openapiFields.add("client_guid");
    openapiFields.add("created_at");
    openapiFields.add("cta_clicked_at");
    openapiFields.add("description");
    openapiFields.add("guid");
    openapiFields.add("has_associated_accounts");
    openapiFields.add("has_associated_merchants");
    openapiFields.add("has_associated_scheduled_payments");
    openapiFields.add("has_associated_transactions");
    openapiFields.add("has_been_displayed");
    openapiFields.add("is_dismissed");
    openapiFields.add("micro_call_to_action");
    openapiFields.add("micro_description");
    openapiFields.add("micro_title");
    openapiFields.add("template");
    openapiFields.add("title");
    openapiFields.add("updated_at");
    openapiFields.add("user_guid");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to InsightResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InsightResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InsightResponse is not found in the empty JSON string", InsightResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InsightResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InsightResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("active_at") != null && !jsonObj.get("active_at").isJsonNull()) && !jsonObj.get("active_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `active_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("active_at").toString()));
      }
      if ((jsonObj.get("client_guid") != null && !jsonObj.get("client_guid").isJsonNull()) && !jsonObj.get("client_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_guid").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("cta_clicked_at") != null && !jsonObj.get("cta_clicked_at").isJsonNull()) && !jsonObj.get("cta_clicked_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cta_clicked_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cta_clicked_at").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("micro_call_to_action") != null && !jsonObj.get("micro_call_to_action").isJsonNull()) && !jsonObj.get("micro_call_to_action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `micro_call_to_action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("micro_call_to_action").toString()));
      }
      if ((jsonObj.get("micro_description") != null && !jsonObj.get("micro_description").isJsonNull()) && !jsonObj.get("micro_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `micro_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("micro_description").toString()));
      }
      if ((jsonObj.get("micro_title") != null && !jsonObj.get("micro_title").isJsonNull()) && !jsonObj.get("micro_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `micro_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("micro_title").toString()));
      }
      if ((jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) && !jsonObj.get("template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InsightResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InsightResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InsightResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InsightResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<InsightResponse>() {
           @Override
           public void write(JsonWriter out, InsightResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InsightResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InsightResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InsightResponse
  * @throws IOException if the JSON string is invalid with respect to InsightResponse
  */
  public static InsightResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InsightResponse.class);
  }

 /**
  * Convert an instance of InsightResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

