/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * WidgetRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WidgetRequest {
  public static final String SERIALIZED_NAME_CLIENT_REDIRECT_URL = "client_redirect_url";
  @SerializedName(SERIALIZED_NAME_CLIENT_REDIRECT_URL)
  private String clientRedirectUrl;

  public static final String SERIALIZED_NAME_COLOR_SCHEME = "color_scheme";
  @SerializedName(SERIALIZED_NAME_COLOR_SCHEME)
  private String colorScheme;

  public static final String SERIALIZED_NAME_CURRENT_INSTITUTION_CODE = "current_institution_code";
  @SerializedName(SERIALIZED_NAME_CURRENT_INSTITUTION_CODE)
  private String currentInstitutionCode;

  public static final String SERIALIZED_NAME_CURRENT_INSTITUTION_GUID = "current_institution_guid";
  @SerializedName(SERIALIZED_NAME_CURRENT_INSTITUTION_GUID)
  private String currentInstitutionGuid;

  public static final String SERIALIZED_NAME_CURRENT_MEMBER_GUID = "current_member_guid";
  @SerializedName(SERIALIZED_NAME_CURRENT_MEMBER_GUID)
  private String currentMemberGuid;

  public static final String SERIALIZED_NAME_DISABLE_BACKGROUND_AGG = "disable_background_agg";
  @SerializedName(SERIALIZED_NAME_DISABLE_BACKGROUND_AGG)
  private Boolean disableBackgroundAgg;

  public static final String SERIALIZED_NAME_DISABLE_INSTITUTION_SEARCH = "disable_institution_search";
  @SerializedName(SERIALIZED_NAME_DISABLE_INSTITUTION_SEARCH)
  private Boolean disableInstitutionSearch;

  public static final String SERIALIZED_NAME_INCLUDE_IDENTITY = "include_identity";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IDENTITY)
  private Boolean includeIdentity;

  public static final String SERIALIZED_NAME_INCLUDE_TRANSACTIONS = "include_transactions";
  @SerializedName(SERIALIZED_NAME_INCLUDE_TRANSACTIONS)
  private Boolean includeTransactions;

  public static final String SERIALIZED_NAME_IS_MOBILE_WEBVIEW = "is_mobile_webview";
  @SerializedName(SERIALIZED_NAME_IS_MOBILE_WEBVIEW)
  private Boolean isMobileWebview;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_OAUTH_REFERRAL_SOURCE = "oauth_referral_source";
  @SerializedName(SERIALIZED_NAME_OAUTH_REFERRAL_SOURCE)
  private String oauthReferralSource;

  public static final String SERIALIZED_NAME_UI_MESSAGE_VERSION = "ui_message_version";
  @SerializedName(SERIALIZED_NAME_UI_MESSAGE_VERSION)
  private Integer uiMessageVersion;

  public static final String SERIALIZED_NAME_UI_MESSAGE_WEBVIEW_URL_SCHEME = "ui_message_webview_url_scheme";
  @SerializedName(SERIALIZED_NAME_UI_MESSAGE_WEBVIEW_URL_SCHEME)
  private String uiMessageWebviewUrlScheme;

  public static final String SERIALIZED_NAME_UPDATE_CREDENTIALS = "update_credentials";
  @SerializedName(SERIALIZED_NAME_UPDATE_CREDENTIALS)
  private Boolean updateCredentials;

  public static final String SERIALIZED_NAME_WIDGET_TYPE = "widget_type";
  @SerializedName(SERIALIZED_NAME_WIDGET_TYPE)
  private String widgetType;

  public WidgetRequest() {
  }

  public WidgetRequest clientRedirectUrl(String clientRedirectUrl) {
    
    this.clientRedirectUrl = clientRedirectUrl;
    return this;
  }

   /**
   * Get clientRedirectUrl
   * @return clientRedirectUrl
  **/
  @javax.annotation.Nullable
  public String getClientRedirectUrl() {
    return clientRedirectUrl;
  }


  public void setClientRedirectUrl(String clientRedirectUrl) {
    this.clientRedirectUrl = clientRedirectUrl;
  }


  public WidgetRequest colorScheme(String colorScheme) {
    
    this.colorScheme = colorScheme;
    return this;
  }

   /**
   * Get colorScheme
   * @return colorScheme
  **/
  @javax.annotation.Nullable
  public String getColorScheme() {
    return colorScheme;
  }


  public void setColorScheme(String colorScheme) {
    this.colorScheme = colorScheme;
  }


  public WidgetRequest currentInstitutionCode(String currentInstitutionCode) {
    
    this.currentInstitutionCode = currentInstitutionCode;
    return this;
  }

   /**
   * Get currentInstitutionCode
   * @return currentInstitutionCode
  **/
  @javax.annotation.Nullable
  public String getCurrentInstitutionCode() {
    return currentInstitutionCode;
  }


  public void setCurrentInstitutionCode(String currentInstitutionCode) {
    this.currentInstitutionCode = currentInstitutionCode;
  }


  public WidgetRequest currentInstitutionGuid(String currentInstitutionGuid) {
    
    this.currentInstitutionGuid = currentInstitutionGuid;
    return this;
  }

   /**
   * Get currentInstitutionGuid
   * @return currentInstitutionGuid
  **/
  @javax.annotation.Nullable
  public String getCurrentInstitutionGuid() {
    return currentInstitutionGuid;
  }


  public void setCurrentInstitutionGuid(String currentInstitutionGuid) {
    this.currentInstitutionGuid = currentInstitutionGuid;
  }


  public WidgetRequest currentMemberGuid(String currentMemberGuid) {
    
    this.currentMemberGuid = currentMemberGuid;
    return this;
  }

   /**
   * Get currentMemberGuid
   * @return currentMemberGuid
  **/
  @javax.annotation.Nullable
  public String getCurrentMemberGuid() {
    return currentMemberGuid;
  }


  public void setCurrentMemberGuid(String currentMemberGuid) {
    this.currentMemberGuid = currentMemberGuid;
  }


  public WidgetRequest disableBackgroundAgg(Boolean disableBackgroundAgg) {
    
    this.disableBackgroundAgg = disableBackgroundAgg;
    return this;
  }

   /**
   * Get disableBackgroundAgg
   * @return disableBackgroundAgg
  **/
  @javax.annotation.Nullable
  public Boolean getDisableBackgroundAgg() {
    return disableBackgroundAgg;
  }


  public void setDisableBackgroundAgg(Boolean disableBackgroundAgg) {
    this.disableBackgroundAgg = disableBackgroundAgg;
  }


  public WidgetRequest disableInstitutionSearch(Boolean disableInstitutionSearch) {
    
    this.disableInstitutionSearch = disableInstitutionSearch;
    return this;
  }

   /**
   * Get disableInstitutionSearch
   * @return disableInstitutionSearch
  **/
  @javax.annotation.Nullable
  public Boolean getDisableInstitutionSearch() {
    return disableInstitutionSearch;
  }


  public void setDisableInstitutionSearch(Boolean disableInstitutionSearch) {
    this.disableInstitutionSearch = disableInstitutionSearch;
  }


  public WidgetRequest includeIdentity(Boolean includeIdentity) {
    
    this.includeIdentity = includeIdentity;
    return this;
  }

   /**
   * Get includeIdentity
   * @return includeIdentity
  **/
  @javax.annotation.Nullable
  public Boolean getIncludeIdentity() {
    return includeIdentity;
  }


  public void setIncludeIdentity(Boolean includeIdentity) {
    this.includeIdentity = includeIdentity;
  }


  public WidgetRequest includeTransactions(Boolean includeTransactions) {
    
    this.includeTransactions = includeTransactions;
    return this;
  }

   /**
   * Get includeTransactions
   * @return includeTransactions
  **/
  @javax.annotation.Nullable
  public Boolean getIncludeTransactions() {
    return includeTransactions;
  }


  public void setIncludeTransactions(Boolean includeTransactions) {
    this.includeTransactions = includeTransactions;
  }


  public WidgetRequest isMobileWebview(Boolean isMobileWebview) {
    
    this.isMobileWebview = isMobileWebview;
    return this;
  }

   /**
   * Get isMobileWebview
   * @return isMobileWebview
  **/
  @javax.annotation.Nullable
  public Boolean getIsMobileWebview() {
    return isMobileWebview;
  }


  public void setIsMobileWebview(Boolean isMobileWebview) {
    this.isMobileWebview = isMobileWebview;
  }


  public WidgetRequest mode(String mode) {
    
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }


  public void setMode(String mode) {
    this.mode = mode;
  }


  public WidgetRequest oauthReferralSource(String oauthReferralSource) {
    
    this.oauthReferralSource = oauthReferralSource;
    return this;
  }

   /**
   * Get oauthReferralSource
   * @return oauthReferralSource
  **/
  @javax.annotation.Nullable
  public String getOauthReferralSource() {
    return oauthReferralSource;
  }


  public void setOauthReferralSource(String oauthReferralSource) {
    this.oauthReferralSource = oauthReferralSource;
  }


  public WidgetRequest uiMessageVersion(Integer uiMessageVersion) {
    
    this.uiMessageVersion = uiMessageVersion;
    return this;
  }

   /**
   * Get uiMessageVersion
   * @return uiMessageVersion
  **/
  @javax.annotation.Nullable
  public Integer getUiMessageVersion() {
    return uiMessageVersion;
  }


  public void setUiMessageVersion(Integer uiMessageVersion) {
    this.uiMessageVersion = uiMessageVersion;
  }


  public WidgetRequest uiMessageWebviewUrlScheme(String uiMessageWebviewUrlScheme) {
    
    this.uiMessageWebviewUrlScheme = uiMessageWebviewUrlScheme;
    return this;
  }

   /**
   * Get uiMessageWebviewUrlScheme
   * @return uiMessageWebviewUrlScheme
  **/
  @javax.annotation.Nullable
  public String getUiMessageWebviewUrlScheme() {
    return uiMessageWebviewUrlScheme;
  }


  public void setUiMessageWebviewUrlScheme(String uiMessageWebviewUrlScheme) {
    this.uiMessageWebviewUrlScheme = uiMessageWebviewUrlScheme;
  }


  public WidgetRequest updateCredentials(Boolean updateCredentials) {
    
    this.updateCredentials = updateCredentials;
    return this;
  }

   /**
   * Get updateCredentials
   * @return updateCredentials
  **/
  @javax.annotation.Nullable
  public Boolean getUpdateCredentials() {
    return updateCredentials;
  }


  public void setUpdateCredentials(Boolean updateCredentials) {
    this.updateCredentials = updateCredentials;
  }


  public WidgetRequest widgetType(String widgetType) {
    
    this.widgetType = widgetType;
    return this;
  }

   /**
   * Get widgetType
   * @return widgetType
  **/
  @javax.annotation.Nonnull
  public String getWidgetType() {
    return widgetType;
  }


  public void setWidgetType(String widgetType) {
    this.widgetType = widgetType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WidgetRequest widgetRequest = (WidgetRequest) o;
    return Objects.equals(this.clientRedirectUrl, widgetRequest.clientRedirectUrl) &&
        Objects.equals(this.colorScheme, widgetRequest.colorScheme) &&
        Objects.equals(this.currentInstitutionCode, widgetRequest.currentInstitutionCode) &&
        Objects.equals(this.currentInstitutionGuid, widgetRequest.currentInstitutionGuid) &&
        Objects.equals(this.currentMemberGuid, widgetRequest.currentMemberGuid) &&
        Objects.equals(this.disableBackgroundAgg, widgetRequest.disableBackgroundAgg) &&
        Objects.equals(this.disableInstitutionSearch, widgetRequest.disableInstitutionSearch) &&
        Objects.equals(this.includeIdentity, widgetRequest.includeIdentity) &&
        Objects.equals(this.includeTransactions, widgetRequest.includeTransactions) &&
        Objects.equals(this.isMobileWebview, widgetRequest.isMobileWebview) &&
        Objects.equals(this.mode, widgetRequest.mode) &&
        Objects.equals(this.oauthReferralSource, widgetRequest.oauthReferralSource) &&
        Objects.equals(this.uiMessageVersion, widgetRequest.uiMessageVersion) &&
        Objects.equals(this.uiMessageWebviewUrlScheme, widgetRequest.uiMessageWebviewUrlScheme) &&
        Objects.equals(this.updateCredentials, widgetRequest.updateCredentials) &&
        Objects.equals(this.widgetType, widgetRequest.widgetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientRedirectUrl, colorScheme, currentInstitutionCode, currentInstitutionGuid, currentMemberGuid, disableBackgroundAgg, disableInstitutionSearch, includeIdentity, includeTransactions, isMobileWebview, mode, oauthReferralSource, uiMessageVersion, uiMessageWebviewUrlScheme, updateCredentials, widgetType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WidgetRequest {\n");
    sb.append("    clientRedirectUrl: ").append(toIndentedString(clientRedirectUrl)).append("\n");
    sb.append("    colorScheme: ").append(toIndentedString(colorScheme)).append("\n");
    sb.append("    currentInstitutionCode: ").append(toIndentedString(currentInstitutionCode)).append("\n");
    sb.append("    currentInstitutionGuid: ").append(toIndentedString(currentInstitutionGuid)).append("\n");
    sb.append("    currentMemberGuid: ").append(toIndentedString(currentMemberGuid)).append("\n");
    sb.append("    disableBackgroundAgg: ").append(toIndentedString(disableBackgroundAgg)).append("\n");
    sb.append("    disableInstitutionSearch: ").append(toIndentedString(disableInstitutionSearch)).append("\n");
    sb.append("    includeIdentity: ").append(toIndentedString(includeIdentity)).append("\n");
    sb.append("    includeTransactions: ").append(toIndentedString(includeTransactions)).append("\n");
    sb.append("    isMobileWebview: ").append(toIndentedString(isMobileWebview)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    oauthReferralSource: ").append(toIndentedString(oauthReferralSource)).append("\n");
    sb.append("    uiMessageVersion: ").append(toIndentedString(uiMessageVersion)).append("\n");
    sb.append("    uiMessageWebviewUrlScheme: ").append(toIndentedString(uiMessageWebviewUrlScheme)).append("\n");
    sb.append("    updateCredentials: ").append(toIndentedString(updateCredentials)).append("\n");
    sb.append("    widgetType: ").append(toIndentedString(widgetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("client_redirect_url");
    openapiFields.add("color_scheme");
    openapiFields.add("current_institution_code");
    openapiFields.add("current_institution_guid");
    openapiFields.add("current_member_guid");
    openapiFields.add("disable_background_agg");
    openapiFields.add("disable_institution_search");
    openapiFields.add("include_identity");
    openapiFields.add("include_transactions");
    openapiFields.add("is_mobile_webview");
    openapiFields.add("mode");
    openapiFields.add("oauth_referral_source");
    openapiFields.add("ui_message_version");
    openapiFields.add("ui_message_webview_url_scheme");
    openapiFields.add("update_credentials");
    openapiFields.add("widget_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("widget_type");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to WidgetRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WidgetRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WidgetRequest is not found in the empty JSON string", WidgetRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WidgetRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WidgetRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WidgetRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("client_redirect_url") != null && !jsonObj.get("client_redirect_url").isJsonNull()) && !jsonObj.get("client_redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_redirect_url").toString()));
      }
      if ((jsonObj.get("color_scheme") != null && !jsonObj.get("color_scheme").isJsonNull()) && !jsonObj.get("color_scheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color_scheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color_scheme").toString()));
      }
      if ((jsonObj.get("current_institution_code") != null && !jsonObj.get("current_institution_code").isJsonNull()) && !jsonObj.get("current_institution_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_institution_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_institution_code").toString()));
      }
      if ((jsonObj.get("current_institution_guid") != null && !jsonObj.get("current_institution_guid").isJsonNull()) && !jsonObj.get("current_institution_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_institution_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_institution_guid").toString()));
      }
      if ((jsonObj.get("current_member_guid") != null && !jsonObj.get("current_member_guid").isJsonNull()) && !jsonObj.get("current_member_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_member_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_member_guid").toString()));
      }
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if ((jsonObj.get("oauth_referral_source") != null && !jsonObj.get("oauth_referral_source").isJsonNull()) && !jsonObj.get("oauth_referral_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oauth_referral_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oauth_referral_source").toString()));
      }
      if ((jsonObj.get("ui_message_webview_url_scheme") != null && !jsonObj.get("ui_message_webview_url_scheme").isJsonNull()) && !jsonObj.get("ui_message_webview_url_scheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui_message_webview_url_scheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui_message_webview_url_scheme").toString()));
      }
      if (!jsonObj.get("widget_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `widget_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("widget_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WidgetRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WidgetRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WidgetRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WidgetRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<WidgetRequest>() {
           @Override
           public void write(JsonWriter out, WidgetRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WidgetRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WidgetRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WidgetRequest
  * @throws IOException if the JSON string is invalid with respect to WidgetRequest
  */
  public static WidgetRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WidgetRequest.class);
  }

 /**
  * Convert an instance of WidgetRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

