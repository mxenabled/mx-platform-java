/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * SpendingPlanIterationItemResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpendingPlanIterationItemResponse {
  public static final String SERIALIZED_NAME_ACTUAL_AMOUNT = "actual_amount";
  @SerializedName(SERIALIZED_NAME_ACTUAL_AMOUNT)
  private BigDecimal actualAmount;

  public static final String SERIALIZED_NAME_CATEGORY_GUID = "category_guid";
  @SerializedName(SERIALIZED_NAME_CATEGORY_GUID)
  private String categoryGuid;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_GUID = "guid";
  @SerializedName(SERIALIZED_NAME_GUID)
  private String guid;

  public static final String SERIALIZED_NAME_ITEM_TYPE = "item_type";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  private String itemType;

  public static final String SERIALIZED_NAME_PLANNED_AMOUNT = "planned_amount";
  @SerializedName(SERIALIZED_NAME_PLANNED_AMOUNT)
  private BigDecimal plannedAmount;

  public static final String SERIALIZED_NAME_SCHEDULED_PAYMENT_GUID = "scheduled_payment_guid";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_PAYMENT_GUID)
  private String scheduledPaymentGuid;

  public static final String SERIALIZED_NAME_SPENDING_PLAN_ITERATION_GUID = "spending_plan_iteration_guid";
  @SerializedName(SERIALIZED_NAME_SPENDING_PLAN_ITERATION_GUID)
  private String spendingPlanIterationGuid;

  public static final String SERIALIZED_NAME_TOP_LEVEL_CATEGORY_GUID = "top_level_category_guid";
  @SerializedName(SERIALIZED_NAME_TOP_LEVEL_CATEGORY_GUID)
  private String topLevelCategoryGuid;

  public static final String SERIALIZED_NAME_TRANSACTION_GUIDS = "transaction_guids";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_GUIDS)
  private List<String> transactionGuids;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_USER_GUID = "user_guid";
  @SerializedName(SERIALIZED_NAME_USER_GUID)
  private String userGuid;

  public SpendingPlanIterationItemResponse() {
  }

  public SpendingPlanIterationItemResponse actualAmount(BigDecimal actualAmount) {
    
    this.actualAmount = actualAmount;
    return this;
  }

   /**
   * Get actualAmount
   * @return actualAmount
  **/
  @javax.annotation.Nullable
  public BigDecimal getActualAmount() {
    return actualAmount;
  }


  public void setActualAmount(BigDecimal actualAmount) {
    this.actualAmount = actualAmount;
  }


  public SpendingPlanIterationItemResponse categoryGuid(String categoryGuid) {
    
    this.categoryGuid = categoryGuid;
    return this;
  }

   /**
   * Get categoryGuid
   * @return categoryGuid
  **/
  @javax.annotation.Nullable
  public String getCategoryGuid() {
    return categoryGuid;
  }


  public void setCategoryGuid(String categoryGuid) {
    this.categoryGuid = categoryGuid;
  }


  public SpendingPlanIterationItemResponse createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SpendingPlanIterationItemResponse guid(String guid) {
    
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @javax.annotation.Nullable
  public String getGuid() {
    return guid;
  }


  public void setGuid(String guid) {
    this.guid = guid;
  }


  public SpendingPlanIterationItemResponse itemType(String itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * Get itemType
   * @return itemType
  **/
  @javax.annotation.Nullable
  public String getItemType() {
    return itemType;
  }


  public void setItemType(String itemType) {
    this.itemType = itemType;
  }


  public SpendingPlanIterationItemResponse plannedAmount(BigDecimal plannedAmount) {
    
    this.plannedAmount = plannedAmount;
    return this;
  }

   /**
   * Get plannedAmount
   * @return plannedAmount
  **/
  @javax.annotation.Nullable
  public BigDecimal getPlannedAmount() {
    return plannedAmount;
  }


  public void setPlannedAmount(BigDecimal plannedAmount) {
    this.plannedAmount = plannedAmount;
  }


  public SpendingPlanIterationItemResponse scheduledPaymentGuid(String scheduledPaymentGuid) {
    
    this.scheduledPaymentGuid = scheduledPaymentGuid;
    return this;
  }

   /**
   * Get scheduledPaymentGuid
   * @return scheduledPaymentGuid
  **/
  @javax.annotation.Nullable
  public String getScheduledPaymentGuid() {
    return scheduledPaymentGuid;
  }


  public void setScheduledPaymentGuid(String scheduledPaymentGuid) {
    this.scheduledPaymentGuid = scheduledPaymentGuid;
  }


  public SpendingPlanIterationItemResponse spendingPlanIterationGuid(String spendingPlanIterationGuid) {
    
    this.spendingPlanIterationGuid = spendingPlanIterationGuid;
    return this;
  }

   /**
   * Get spendingPlanIterationGuid
   * @return spendingPlanIterationGuid
  **/
  @javax.annotation.Nullable
  public String getSpendingPlanIterationGuid() {
    return spendingPlanIterationGuid;
  }


  public void setSpendingPlanIterationGuid(String spendingPlanIterationGuid) {
    this.spendingPlanIterationGuid = spendingPlanIterationGuid;
  }


  public SpendingPlanIterationItemResponse topLevelCategoryGuid(String topLevelCategoryGuid) {
    
    this.topLevelCategoryGuid = topLevelCategoryGuid;
    return this;
  }

   /**
   * Get topLevelCategoryGuid
   * @return topLevelCategoryGuid
  **/
  @javax.annotation.Nullable
  public String getTopLevelCategoryGuid() {
    return topLevelCategoryGuid;
  }


  public void setTopLevelCategoryGuid(String topLevelCategoryGuid) {
    this.topLevelCategoryGuid = topLevelCategoryGuid;
  }


  public SpendingPlanIterationItemResponse transactionGuids(List<String> transactionGuids) {
    
    this.transactionGuids = transactionGuids;
    return this;
  }

  public SpendingPlanIterationItemResponse addTransactionGuidsItem(String transactionGuidsItem) {
    if (this.transactionGuids == null) {
      this.transactionGuids = new ArrayList<>();
    }
    this.transactionGuids.add(transactionGuidsItem);
    return this;
  }

   /**
   * Get transactionGuids
   * @return transactionGuids
  **/
  @javax.annotation.Nullable
  public List<String> getTransactionGuids() {
    return transactionGuids;
  }


  public void setTransactionGuids(List<String> transactionGuids) {
    this.transactionGuids = transactionGuids;
  }


  public SpendingPlanIterationItemResponse updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public SpendingPlanIterationItemResponse userGuid(String userGuid) {
    
    this.userGuid = userGuid;
    return this;
  }

   /**
   * Get userGuid
   * @return userGuid
  **/
  @javax.annotation.Nullable
  public String getUserGuid() {
    return userGuid;
  }


  public void setUserGuid(String userGuid) {
    this.userGuid = userGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpendingPlanIterationItemResponse spendingPlanIterationItemResponse = (SpendingPlanIterationItemResponse) o;
    return Objects.equals(this.actualAmount, spendingPlanIterationItemResponse.actualAmount) &&
        Objects.equals(this.categoryGuid, spendingPlanIterationItemResponse.categoryGuid) &&
        Objects.equals(this.createdAt, spendingPlanIterationItemResponse.createdAt) &&
        Objects.equals(this.guid, spendingPlanIterationItemResponse.guid) &&
        Objects.equals(this.itemType, spendingPlanIterationItemResponse.itemType) &&
        Objects.equals(this.plannedAmount, spendingPlanIterationItemResponse.plannedAmount) &&
        Objects.equals(this.scheduledPaymentGuid, spendingPlanIterationItemResponse.scheduledPaymentGuid) &&
        Objects.equals(this.spendingPlanIterationGuid, spendingPlanIterationItemResponse.spendingPlanIterationGuid) &&
        Objects.equals(this.topLevelCategoryGuid, spendingPlanIterationItemResponse.topLevelCategoryGuid) &&
        Objects.equals(this.transactionGuids, spendingPlanIterationItemResponse.transactionGuids) &&
        Objects.equals(this.updatedAt, spendingPlanIterationItemResponse.updatedAt) &&
        Objects.equals(this.userGuid, spendingPlanIterationItemResponse.userGuid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualAmount, categoryGuid, createdAt, guid, itemType, plannedAmount, scheduledPaymentGuid, spendingPlanIterationGuid, topLevelCategoryGuid, transactionGuids, updatedAt, userGuid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpendingPlanIterationItemResponse {\n");
    sb.append("    actualAmount: ").append(toIndentedString(actualAmount)).append("\n");
    sb.append("    categoryGuid: ").append(toIndentedString(categoryGuid)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    plannedAmount: ").append(toIndentedString(plannedAmount)).append("\n");
    sb.append("    scheduledPaymentGuid: ").append(toIndentedString(scheduledPaymentGuid)).append("\n");
    sb.append("    spendingPlanIterationGuid: ").append(toIndentedString(spendingPlanIterationGuid)).append("\n");
    sb.append("    topLevelCategoryGuid: ").append(toIndentedString(topLevelCategoryGuid)).append("\n");
    sb.append("    transactionGuids: ").append(toIndentedString(transactionGuids)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userGuid: ").append(toIndentedString(userGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actual_amount");
    openapiFields.add("category_guid");
    openapiFields.add("created_at");
    openapiFields.add("guid");
    openapiFields.add("item_type");
    openapiFields.add("planned_amount");
    openapiFields.add("scheduled_payment_guid");
    openapiFields.add("spending_plan_iteration_guid");
    openapiFields.add("top_level_category_guid");
    openapiFields.add("transaction_guids");
    openapiFields.add("updated_at");
    openapiFields.add("user_guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SpendingPlanIterationItemResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SpendingPlanIterationItemResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpendingPlanIterationItemResponse is not found in the empty JSON string", SpendingPlanIterationItemResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SpendingPlanIterationItemResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SpendingPlanIterationItemResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("category_guid") != null && !jsonObj.get("category_guid").isJsonNull()) && !jsonObj.get("category_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_guid").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("guid") != null && !jsonObj.get("guid").isJsonNull()) && !jsonObj.get("guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guid").toString()));
      }
      if ((jsonObj.get("item_type") != null && !jsonObj.get("item_type").isJsonNull()) && !jsonObj.get("item_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_type").toString()));
      }
      if ((jsonObj.get("scheduled_payment_guid") != null && !jsonObj.get("scheduled_payment_guid").isJsonNull()) && !jsonObj.get("scheduled_payment_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduled_payment_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduled_payment_guid").toString()));
      }
      if ((jsonObj.get("spending_plan_iteration_guid") != null && !jsonObj.get("spending_plan_iteration_guid").isJsonNull()) && !jsonObj.get("spending_plan_iteration_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spending_plan_iteration_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spending_plan_iteration_guid").toString()));
      }
      if ((jsonObj.get("top_level_category_guid") != null && !jsonObj.get("top_level_category_guid").isJsonNull()) && !jsonObj.get("top_level_category_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_level_category_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("top_level_category_guid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("transaction_guids") != null && !jsonObj.get("transaction_guids").isJsonNull() && !jsonObj.get("transaction_guids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_guids` to be an array in the JSON string but got `%s`", jsonObj.get("transaction_guids").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("user_guid") != null && !jsonObj.get("user_guid").isJsonNull()) && !jsonObj.get("user_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpendingPlanIterationItemResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpendingPlanIterationItemResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpendingPlanIterationItemResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpendingPlanIterationItemResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SpendingPlanIterationItemResponse>() {
           @Override
           public void write(JsonWriter out, SpendingPlanIterationItemResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SpendingPlanIterationItemResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SpendingPlanIterationItemResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SpendingPlanIterationItemResponse
  * @throws IOException if the JSON string is invalid with respect to SpendingPlanIterationItemResponse
  */
  public static SpendingPlanIterationItemResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpendingPlanIterationItemResponse.class);
  }

 /**
  * Convert an instance of SpendingPlanIterationItemResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

