/*
 * MX Platform API
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mx.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.mx.client.JSON;

/**
 * ManagedAccountUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ManagedAccountUpdateRequest {
  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "account_number";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_APR = "apr";
  @SerializedName(SERIALIZED_NAME_APR)
  private BigDecimal apr;

  public static final String SERIALIZED_NAME_APY = "apy";
  @SerializedName(SERIALIZED_NAME_APY)
  private BigDecimal apy;

  public static final String SERIALIZED_NAME_AVAILABLE_BALANCE = "available_balance";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_BALANCE)
  private BigDecimal availableBalance;

  public static final String SERIALIZED_NAME_AVAILABLE_CREDIT = "available_credit";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_CREDIT)
  private BigDecimal availableCredit;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private BigDecimal balance;

  public static final String SERIALIZED_NAME_CASH_SURRENDER_VALUE = "cash_surrender_value";
  @SerializedName(SERIALIZED_NAME_CASH_SURRENDER_VALUE)
  private BigDecimal cashSurrenderValue;

  public static final String SERIALIZED_NAME_CREDIT_LIMIT = "credit_limit";
  @SerializedName(SERIALIZED_NAME_CREDIT_LIMIT)
  private BigDecimal creditLimit;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DAY_PAYMENT_IS_DUE = "day_payment_is_due";
  @SerializedName(SERIALIZED_NAME_DAY_PAYMENT_IS_DUE)
  private Integer dayPaymentIsDue;

  public static final String SERIALIZED_NAME_DEATH_BENEFIT = "death_benefit";
  @SerializedName(SERIALIZED_NAME_DEATH_BENEFIT)
  private Integer deathBenefit;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTEREST_RATE = "interest_rate";
  @SerializedName(SERIALIZED_NAME_INTEREST_RATE)
  private BigDecimal interestRate;

  public static final String SERIALIZED_NAME_IS_CLOSED = "is_closed";
  @SerializedName(SERIALIZED_NAME_IS_CLOSED)
  private Boolean isClosed;

  public static final String SERIALIZED_NAME_IS_HIDDEN = "is_hidden";
  @SerializedName(SERIALIZED_NAME_IS_HIDDEN)
  private Boolean isHidden;

  public static final String SERIALIZED_NAME_LAST_PAYMENT = "last_payment";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT)
  private BigDecimal lastPayment;

  public static final String SERIALIZED_NAME_LAST_PAYMENT_AT = "last_payment_at";
  @SerializedName(SERIALIZED_NAME_LAST_PAYMENT_AT)
  private String lastPaymentAt;

  public static final String SERIALIZED_NAME_LOAN_AMOUNT = "loan_amount";
  @SerializedName(SERIALIZED_NAME_LOAN_AMOUNT)
  private BigDecimal loanAmount;

  public static final String SERIALIZED_NAME_MATURES_ON = "matures_on";
  @SerializedName(SERIALIZED_NAME_MATURES_ON)
  private String maturesOn;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_MINIMUM_BALANCE = "minimum_balance";
  @SerializedName(SERIALIZED_NAME_MINIMUM_BALANCE)
  private BigDecimal minimumBalance;

  public static final String SERIALIZED_NAME_MINIMUM_PAYMENT = "minimum_payment";
  @SerializedName(SERIALIZED_NAME_MINIMUM_PAYMENT)
  private BigDecimal minimumPayment;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_ORIGINAL_BALANCE = "original_balance";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_BALANCE)
  private BigDecimal originalBalance;

  public static final String SERIALIZED_NAME_PAYMENT_DUE_AT = "payment_due_at";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DUE_AT)
  private String paymentDueAt;

  public static final String SERIALIZED_NAME_PAYOFF_BALANCE = "payoff_balance";
  @SerializedName(SERIALIZED_NAME_PAYOFF_BALANCE)
  private BigDecimal payoffBalance;

  public static final String SERIALIZED_NAME_ROUTING_NUMBER = "routing_number";
  @SerializedName(SERIALIZED_NAME_ROUTING_NUMBER)
  private String routingNumber;

  public static final String SERIALIZED_NAME_STARTED_ON = "started_on";
  @SerializedName(SERIALIZED_NAME_STARTED_ON)
  private String startedOn;

  public static final String SERIALIZED_NAME_SUBTYPE = "subtype";
  @SerializedName(SERIALIZED_NAME_SUBTYPE)
  private String subtype;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public ManagedAccountUpdateRequest() {
  }

  public ManagedAccountUpdateRequest accountNumber(String accountNumber) {
    
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  public String getAccountNumber() {
    return accountNumber;
  }


  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public ManagedAccountUpdateRequest apr(BigDecimal apr) {
    
    this.apr = apr;
    return this;
  }

   /**
   * Get apr
   * @return apr
  **/
  @javax.annotation.Nullable
  public BigDecimal getApr() {
    return apr;
  }


  public void setApr(BigDecimal apr) {
    this.apr = apr;
  }


  public ManagedAccountUpdateRequest apy(BigDecimal apy) {
    
    this.apy = apy;
    return this;
  }

   /**
   * Get apy
   * @return apy
  **/
  @javax.annotation.Nullable
  public BigDecimal getApy() {
    return apy;
  }


  public void setApy(BigDecimal apy) {
    this.apy = apy;
  }


  public ManagedAccountUpdateRequest availableBalance(BigDecimal availableBalance) {
    
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * Get availableBalance
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }


  public void setAvailableBalance(BigDecimal availableBalance) {
    this.availableBalance = availableBalance;
  }


  public ManagedAccountUpdateRequest availableCredit(BigDecimal availableCredit) {
    
    this.availableCredit = availableCredit;
    return this;
  }

   /**
   * Get availableCredit
   * @return availableCredit
  **/
  @javax.annotation.Nullable
  public BigDecimal getAvailableCredit() {
    return availableCredit;
  }


  public void setAvailableCredit(BigDecimal availableCredit) {
    this.availableCredit = availableCredit;
  }


  public ManagedAccountUpdateRequest balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @javax.annotation.Nullable
  public BigDecimal getBalance() {
    return balance;
  }


  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public ManagedAccountUpdateRequest cashSurrenderValue(BigDecimal cashSurrenderValue) {
    
    this.cashSurrenderValue = cashSurrenderValue;
    return this;
  }

   /**
   * Get cashSurrenderValue
   * @return cashSurrenderValue
  **/
  @javax.annotation.Nullable
  public BigDecimal getCashSurrenderValue() {
    return cashSurrenderValue;
  }


  public void setCashSurrenderValue(BigDecimal cashSurrenderValue) {
    this.cashSurrenderValue = cashSurrenderValue;
  }


  public ManagedAccountUpdateRequest creditLimit(BigDecimal creditLimit) {
    
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @javax.annotation.Nullable
  public BigDecimal getCreditLimit() {
    return creditLimit;
  }


  public void setCreditLimit(BigDecimal creditLimit) {
    this.creditLimit = creditLimit;
  }


  public ManagedAccountUpdateRequest currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ManagedAccountUpdateRequest dayPaymentIsDue(Integer dayPaymentIsDue) {
    
    this.dayPaymentIsDue = dayPaymentIsDue;
    return this;
  }

   /**
   * Get dayPaymentIsDue
   * @return dayPaymentIsDue
  **/
  @javax.annotation.Nullable
  public Integer getDayPaymentIsDue() {
    return dayPaymentIsDue;
  }


  public void setDayPaymentIsDue(Integer dayPaymentIsDue) {
    this.dayPaymentIsDue = dayPaymentIsDue;
  }


  public ManagedAccountUpdateRequest deathBenefit(Integer deathBenefit) {
    
    this.deathBenefit = deathBenefit;
    return this;
  }

   /**
   * Get deathBenefit
   * @return deathBenefit
  **/
  @javax.annotation.Nullable
  public Integer getDeathBenefit() {
    return deathBenefit;
  }


  public void setDeathBenefit(Integer deathBenefit) {
    this.deathBenefit = deathBenefit;
  }


  public ManagedAccountUpdateRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ManagedAccountUpdateRequest interestRate(BigDecimal interestRate) {
    
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Get interestRate
   * @return interestRate
  **/
  @javax.annotation.Nullable
  public BigDecimal getInterestRate() {
    return interestRate;
  }


  public void setInterestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
  }


  public ManagedAccountUpdateRequest isClosed(Boolean isClosed) {
    
    this.isClosed = isClosed;
    return this;
  }

   /**
   * Get isClosed
   * @return isClosed
  **/
  @javax.annotation.Nullable
  public Boolean getIsClosed() {
    return isClosed;
  }


  public void setIsClosed(Boolean isClosed) {
    this.isClosed = isClosed;
  }


  public ManagedAccountUpdateRequest isHidden(Boolean isHidden) {
    
    this.isHidden = isHidden;
    return this;
  }

   /**
   * Get isHidden
   * @return isHidden
  **/
  @javax.annotation.Nullable
  public Boolean getIsHidden() {
    return isHidden;
  }


  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public ManagedAccountUpdateRequest lastPayment(BigDecimal lastPayment) {
    
    this.lastPayment = lastPayment;
    return this;
  }

   /**
   * Get lastPayment
   * @return lastPayment
  **/
  @javax.annotation.Nullable
  public BigDecimal getLastPayment() {
    return lastPayment;
  }


  public void setLastPayment(BigDecimal lastPayment) {
    this.lastPayment = lastPayment;
  }


  public ManagedAccountUpdateRequest lastPaymentAt(String lastPaymentAt) {
    
    this.lastPaymentAt = lastPaymentAt;
    return this;
  }

   /**
   * Get lastPaymentAt
   * @return lastPaymentAt
  **/
  @javax.annotation.Nullable
  public String getLastPaymentAt() {
    return lastPaymentAt;
  }


  public void setLastPaymentAt(String lastPaymentAt) {
    this.lastPaymentAt = lastPaymentAt;
  }


  public ManagedAccountUpdateRequest loanAmount(BigDecimal loanAmount) {
    
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * Get loanAmount
   * @return loanAmount
  **/
  @javax.annotation.Nullable
  public BigDecimal getLoanAmount() {
    return loanAmount;
  }


  public void setLoanAmount(BigDecimal loanAmount) {
    this.loanAmount = loanAmount;
  }


  public ManagedAccountUpdateRequest maturesOn(String maturesOn) {
    
    this.maturesOn = maturesOn;
    return this;
  }

   /**
   * Get maturesOn
   * @return maturesOn
  **/
  @javax.annotation.Nullable
  public String getMaturesOn() {
    return maturesOn;
  }


  public void setMaturesOn(String maturesOn) {
    this.maturesOn = maturesOn;
  }


  public ManagedAccountUpdateRequest metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public ManagedAccountUpdateRequest minimumBalance(BigDecimal minimumBalance) {
    
    this.minimumBalance = minimumBalance;
    return this;
  }

   /**
   * Get minimumBalance
   * @return minimumBalance
  **/
  @javax.annotation.Nullable
  public BigDecimal getMinimumBalance() {
    return minimumBalance;
  }


  public void setMinimumBalance(BigDecimal minimumBalance) {
    this.minimumBalance = minimumBalance;
  }


  public ManagedAccountUpdateRequest minimumPayment(BigDecimal minimumPayment) {
    
    this.minimumPayment = minimumPayment;
    return this;
  }

   /**
   * Get minimumPayment
   * @return minimumPayment
  **/
  @javax.annotation.Nullable
  public BigDecimal getMinimumPayment() {
    return minimumPayment;
  }


  public void setMinimumPayment(BigDecimal minimumPayment) {
    this.minimumPayment = minimumPayment;
  }


  public ManagedAccountUpdateRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ManagedAccountUpdateRequest nickname(String nickname) {
    
    this.nickname = nickname;
    return this;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }


  public ManagedAccountUpdateRequest originalBalance(BigDecimal originalBalance) {
    
    this.originalBalance = originalBalance;
    return this;
  }

   /**
   * Get originalBalance
   * @return originalBalance
  **/
  @javax.annotation.Nullable
  public BigDecimal getOriginalBalance() {
    return originalBalance;
  }


  public void setOriginalBalance(BigDecimal originalBalance) {
    this.originalBalance = originalBalance;
  }


  public ManagedAccountUpdateRequest paymentDueAt(String paymentDueAt) {
    
    this.paymentDueAt = paymentDueAt;
    return this;
  }

   /**
   * Get paymentDueAt
   * @return paymentDueAt
  **/
  @javax.annotation.Nullable
  public String getPaymentDueAt() {
    return paymentDueAt;
  }


  public void setPaymentDueAt(String paymentDueAt) {
    this.paymentDueAt = paymentDueAt;
  }


  public ManagedAccountUpdateRequest payoffBalance(BigDecimal payoffBalance) {
    
    this.payoffBalance = payoffBalance;
    return this;
  }

   /**
   * Get payoffBalance
   * @return payoffBalance
  **/
  @javax.annotation.Nullable
  public BigDecimal getPayoffBalance() {
    return payoffBalance;
  }


  public void setPayoffBalance(BigDecimal payoffBalance) {
    this.payoffBalance = payoffBalance;
  }


  public ManagedAccountUpdateRequest routingNumber(String routingNumber) {
    
    this.routingNumber = routingNumber;
    return this;
  }

   /**
   * Get routingNumber
   * @return routingNumber
  **/
  @javax.annotation.Nullable
  public String getRoutingNumber() {
    return routingNumber;
  }


  public void setRoutingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
  }


  public ManagedAccountUpdateRequest startedOn(String startedOn) {
    
    this.startedOn = startedOn;
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @javax.annotation.Nullable
  public String getStartedOn() {
    return startedOn;
  }


  public void setStartedOn(String startedOn) {
    this.startedOn = startedOn;
  }


  public ManagedAccountUpdateRequest subtype(String subtype) {
    
    this.subtype = subtype;
    return this;
  }

   /**
   * Get subtype
   * @return subtype
  **/
  @javax.annotation.Nullable
  public String getSubtype() {
    return subtype;
  }


  public void setSubtype(String subtype) {
    this.subtype = subtype;
  }


  public ManagedAccountUpdateRequest type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagedAccountUpdateRequest managedAccountUpdateRequest = (ManagedAccountUpdateRequest) o;
    return Objects.equals(this.accountNumber, managedAccountUpdateRequest.accountNumber) &&
        Objects.equals(this.apr, managedAccountUpdateRequest.apr) &&
        Objects.equals(this.apy, managedAccountUpdateRequest.apy) &&
        Objects.equals(this.availableBalance, managedAccountUpdateRequest.availableBalance) &&
        Objects.equals(this.availableCredit, managedAccountUpdateRequest.availableCredit) &&
        Objects.equals(this.balance, managedAccountUpdateRequest.balance) &&
        Objects.equals(this.cashSurrenderValue, managedAccountUpdateRequest.cashSurrenderValue) &&
        Objects.equals(this.creditLimit, managedAccountUpdateRequest.creditLimit) &&
        Objects.equals(this.currencyCode, managedAccountUpdateRequest.currencyCode) &&
        Objects.equals(this.dayPaymentIsDue, managedAccountUpdateRequest.dayPaymentIsDue) &&
        Objects.equals(this.deathBenefit, managedAccountUpdateRequest.deathBenefit) &&
        Objects.equals(this.id, managedAccountUpdateRequest.id) &&
        Objects.equals(this.interestRate, managedAccountUpdateRequest.interestRate) &&
        Objects.equals(this.isClosed, managedAccountUpdateRequest.isClosed) &&
        Objects.equals(this.isHidden, managedAccountUpdateRequest.isHidden) &&
        Objects.equals(this.lastPayment, managedAccountUpdateRequest.lastPayment) &&
        Objects.equals(this.lastPaymentAt, managedAccountUpdateRequest.lastPaymentAt) &&
        Objects.equals(this.loanAmount, managedAccountUpdateRequest.loanAmount) &&
        Objects.equals(this.maturesOn, managedAccountUpdateRequest.maturesOn) &&
        Objects.equals(this.metadata, managedAccountUpdateRequest.metadata) &&
        Objects.equals(this.minimumBalance, managedAccountUpdateRequest.minimumBalance) &&
        Objects.equals(this.minimumPayment, managedAccountUpdateRequest.minimumPayment) &&
        Objects.equals(this.name, managedAccountUpdateRequest.name) &&
        Objects.equals(this.nickname, managedAccountUpdateRequest.nickname) &&
        Objects.equals(this.originalBalance, managedAccountUpdateRequest.originalBalance) &&
        Objects.equals(this.paymentDueAt, managedAccountUpdateRequest.paymentDueAt) &&
        Objects.equals(this.payoffBalance, managedAccountUpdateRequest.payoffBalance) &&
        Objects.equals(this.routingNumber, managedAccountUpdateRequest.routingNumber) &&
        Objects.equals(this.startedOn, managedAccountUpdateRequest.startedOn) &&
        Objects.equals(this.subtype, managedAccountUpdateRequest.subtype) &&
        Objects.equals(this.type, managedAccountUpdateRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumber, apr, apy, availableBalance, availableCredit, balance, cashSurrenderValue, creditLimit, currencyCode, dayPaymentIsDue, deathBenefit, id, interestRate, isClosed, isHidden, lastPayment, lastPaymentAt, loanAmount, maturesOn, metadata, minimumBalance, minimumPayment, name, nickname, originalBalance, paymentDueAt, payoffBalance, routingNumber, startedOn, subtype, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagedAccountUpdateRequest {\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    apr: ").append(toIndentedString(apr)).append("\n");
    sb.append("    apy: ").append(toIndentedString(apy)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    availableCredit: ").append(toIndentedString(availableCredit)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    cashSurrenderValue: ").append(toIndentedString(cashSurrenderValue)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    dayPaymentIsDue: ").append(toIndentedString(dayPaymentIsDue)).append("\n");
    sb.append("    deathBenefit: ").append(toIndentedString(deathBenefit)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    isClosed: ").append(toIndentedString(isClosed)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    lastPayment: ").append(toIndentedString(lastPayment)).append("\n");
    sb.append("    lastPaymentAt: ").append(toIndentedString(lastPaymentAt)).append("\n");
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    maturesOn: ").append(toIndentedString(maturesOn)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    minimumBalance: ").append(toIndentedString(minimumBalance)).append("\n");
    sb.append("    minimumPayment: ").append(toIndentedString(minimumPayment)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    originalBalance: ").append(toIndentedString(originalBalance)).append("\n");
    sb.append("    paymentDueAt: ").append(toIndentedString(paymentDueAt)).append("\n");
    sb.append("    payoffBalance: ").append(toIndentedString(payoffBalance)).append("\n");
    sb.append("    routingNumber: ").append(toIndentedString(routingNumber)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_number");
    openapiFields.add("apr");
    openapiFields.add("apy");
    openapiFields.add("available_balance");
    openapiFields.add("available_credit");
    openapiFields.add("balance");
    openapiFields.add("cash_surrender_value");
    openapiFields.add("credit_limit");
    openapiFields.add("currency_code");
    openapiFields.add("day_payment_is_due");
    openapiFields.add("death_benefit");
    openapiFields.add("id");
    openapiFields.add("interest_rate");
    openapiFields.add("is_closed");
    openapiFields.add("is_hidden");
    openapiFields.add("last_payment");
    openapiFields.add("last_payment_at");
    openapiFields.add("loan_amount");
    openapiFields.add("matures_on");
    openapiFields.add("metadata");
    openapiFields.add("minimum_balance");
    openapiFields.add("minimum_payment");
    openapiFields.add("name");
    openapiFields.add("nickname");
    openapiFields.add("original_balance");
    openapiFields.add("payment_due_at");
    openapiFields.add("payoff_balance");
    openapiFields.add("routing_number");
    openapiFields.add("started_on");
    openapiFields.add("subtype");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ManagedAccountUpdateRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagedAccountUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagedAccountUpdateRequest is not found in the empty JSON string", ManagedAccountUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagedAccountUpdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagedAccountUpdateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_number") != null && !jsonObj.get("account_number").isJsonNull()) && !jsonObj.get("account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_number").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("last_payment_at") != null && !jsonObj.get("last_payment_at").isJsonNull()) && !jsonObj.get("last_payment_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_payment_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_payment_at").toString()));
      }
      if ((jsonObj.get("matures_on") != null && !jsonObj.get("matures_on").isJsonNull()) && !jsonObj.get("matures_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `matures_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("matures_on").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("payment_due_at") != null && !jsonObj.get("payment_due_at").isJsonNull()) && !jsonObj.get("payment_due_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_due_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_due_at").toString()));
      }
      if ((jsonObj.get("routing_number") != null && !jsonObj.get("routing_number").isJsonNull()) && !jsonObj.get("routing_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routing_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routing_number").toString()));
      }
      if ((jsonObj.get("started_on") != null && !jsonObj.get("started_on").isJsonNull()) && !jsonObj.get("started_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `started_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("started_on").toString()));
      }
      if ((jsonObj.get("subtype") != null && !jsonObj.get("subtype").isJsonNull()) && !jsonObj.get("subtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtype").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagedAccountUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagedAccountUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagedAccountUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagedAccountUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagedAccountUpdateRequest>() {
           @Override
           public void write(JsonWriter out, ManagedAccountUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagedAccountUpdateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagedAccountUpdateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagedAccountUpdateRequest
  * @throws IOException if the JSON string is invalid with respect to ManagedAccountUpdateRequest
  */
  public static ManagedAccountUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagedAccountUpdateRequest.class);
  }

 /**
  * Convert an instance of ManagedAccountUpdateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

